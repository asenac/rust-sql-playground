run
filter_merge_1
----
----
[0] QueryRoot
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)
  [3] Filter [gt(ref_2, ref_3)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)
    [2] Filter [eq(ref_0, ref_1)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: eq(ref_0, ref_1)
      [1] TableScan id: 0
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string


Optimized:
[0] QueryRoot
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0)
  [5] Project [ref_0, ref_0, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0)
    [6] Filter [gt(ref_2, ref_3), eq(ref_0, ref_1)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)
      [1] TableScan id: 0
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string

initial {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)"]},{"id":"3","label":"[3] Filter [gt(ref_2, ref_3)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)"]},{"id":"2","label":"[2] Filter [eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_1)"]},{"id":"1","label":"[1] TableScan id: 0","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"0","to":"3","label":"input 0"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"}]}
step TopProjectionRule {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)"]},{"id":"3","label":"[3] Filter [gt(ref_2, ref_3)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)"]},{"id":"2","label":"[2] Filter [eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_1)"]},{"id":"1","label":"[1] TableScan id: 0","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"4","label":"[4] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)"]}],"edges":[{"from":"0","to":"3","label":"input 0"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"4","label":"TopProjectionRule"}]}
step ProjectNormalizationRule {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)"]},{"id":"4","label":"[4] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)"]},{"id":"3","label":"[3] Filter [gt(ref_2, ref_3)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)"]},{"id":"2","label":"[2] Filter [eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_1)"]},{"id":"1","label":"[1] TableScan id: 0","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"5","label":"[5] Project [ref_0, ref_0, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0)"]}],"edges":[{"from":"0","to":"4","label":"input 0"},{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"5","to":"3","label":"input 0"},{"from":"4","to":"5","label":"ProjectNormalizationRule"}]}
step FilterMergeRule {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0)"]},{"id":"5","label":"[5] Project [ref_0, ref_0, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0)"]},{"id":"3","label":"[3] Filter [gt(ref_2, ref_3)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)"]},{"id":"2","label":"[2] Filter [eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_1)"]},{"id":"1","label":"[1] TableScan id: 0","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"6","label":"[6] Filter [gt(ref_2, ref_3), eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)"]}],"edges":[{"from":"0","to":"5","label":"input 0"},{"from":"5","to":"3","label":"input 0"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"6","to":"1","label":"input 0"},{"from":"3","to":"6","label":"FilterMergeRule"}]}
final {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0)"]},{"id":"5","label":"[5] Project [ref_0, ref_0, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0)"]},{"id":"6","label":"[6] Filter [gt(ref_2, ref_3), eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)"]},{"id":"1","label":"[1] TableScan id: 0","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"0","to":"5","label":"input 0"},{"from":"5","to":"6","label":"input 0"},{"from":"6","to":"1","label":"input 0"}]}
----
----

run
filter_merge_2
----
----
[0] QueryRoot
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)
  [4] Filter [lt(ref_4, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)
    [3] Filter [gt(ref_2, ref_3)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)
      [2] Filter [eq(ref_0, ref_1)]
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string
          - Pulled Up Predicates: eq(ref_0, ref_1)
        [1] TableScan id: 0
            - Num Columns: 10
            - Row Type: string, string, string, string, string, string, string, string, string, string


Optimized:
[0] QueryRoot
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0), lt(ref_4, ref_5)
  [6] Project [ref_0, ref_0, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0), lt(ref_4, ref_5)
    [10] Filter [gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)
      [1] TableScan id: 0
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string

initial {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"4","label":"[4] Filter [lt(ref_4, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"3","label":"[3] Filter [gt(ref_2, ref_3)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)"]},{"id":"2","label":"[2] Filter [eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_1)"]},{"id":"1","label":"[1] TableScan id: 0","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"0","to":"4","label":"input 0"},{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"}]}
step TopProjectionRule {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"4","label":"[4] Filter [lt(ref_4, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"3","label":"[3] Filter [gt(ref_2, ref_3)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)"]},{"id":"2","label":"[2] Filter [eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_1)"]},{"id":"1","label":"[1] TableScan id: 0","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"5","label":"[5] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]}],"edges":[{"from":"0","to":"4","label":"input 0"},{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"5","to":"4","label":"input 0"},{"from":"4","to":"5","label":"TopProjectionRule"}]}
step ProjectNormalizationRule {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"5","label":"[5] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"4","label":"[4] Filter [lt(ref_4, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"3","label":"[3] Filter [gt(ref_2, ref_3)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)"]},{"id":"2","label":"[2] Filter [eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_1)"]},{"id":"1","label":"[1] TableScan id: 0","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"6","label":"[6] Project [ref_0, ref_0, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0), lt(ref_4, ref_5)"]}],"edges":[{"from":"0","to":"5","label":"input 0"},{"from":"5","to":"4","label":"input 0"},{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"6","to":"4","label":"input 0"},{"from":"5","to":"6","label":"ProjectNormalizationRule"}]}
step FilterMergeRule {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0), lt(ref_4, ref_5)"]},{"id":"6","label":"[6] Project [ref_0, ref_0, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0), lt(ref_4, ref_5)"]},{"id":"4","label":"[4] Filter [lt(ref_4, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"3","label":"[3] Filter [gt(ref_2, ref_3)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)"]},{"id":"2","label":"[2] Filter [eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_1)"]},{"id":"1","label":"[1] TableScan id: 0","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"7","label":"[7] Filter [lt(ref_4, ref_5), gt(ref_2, ref_3)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]}],"edges":[{"from":"0","to":"6","label":"input 0"},{"from":"6","to":"4","label":"input 0"},{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"7","to":"2","label":"input 0"},{"from":"4","to":"7","label":"FilterMergeRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0), lt(ref_4, ref_5)"]},{"id":"6","label":"[6] Project [ref_0, ref_0, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0), lt(ref_4, ref_5)"]},{"id":"7","label":"[7] Filter [lt(ref_4, ref_5), gt(ref_2, ref_3)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"2","label":"[2] Filter [eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_1)"]},{"id":"1","label":"[1] TableScan id: 0","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"8","label":"[8] Filter [gt(ref_2, ref_3), lt(ref_4, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]}],"edges":[{"from":"0","to":"6","label":"input 0"},{"from":"6","to":"7","label":"input 0"},{"from":"7","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"8","to":"2","label":"input 0"},{"from":"7","to":"8","label":"FilterNormalizationRule"}]}
step FilterMergeRule {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0), lt(ref_4, ref_5)"]},{"id":"6","label":"[6] Project [ref_0, ref_0, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0), lt(ref_4, ref_5)"]},{"id":"8","label":"[8] Filter [gt(ref_2, ref_3), lt(ref_4, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"2","label":"[2] Filter [eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_1)"]},{"id":"1","label":"[1] TableScan id: 0","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"9","label":"[9] Filter [gt(ref_2, ref_3), lt(ref_4, ref_5), eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]}],"edges":[{"from":"0","to":"6","label":"input 0"},{"from":"6","to":"8","label":"input 0"},{"from":"8","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"9","to":"1","label":"input 0"},{"from":"8","to":"9","label":"FilterMergeRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0), lt(ref_4, ref_5)"]},{"id":"6","label":"[6] Project [ref_0, ref_0, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0), lt(ref_4, ref_5)"]},{"id":"9","label":"[9] Filter [gt(ref_2, ref_3), lt(ref_4, ref_5), eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"1","label":"[1] TableScan id: 0","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"10","label":"[10] Filter [gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]}],"edges":[{"from":"0","to":"6","label":"input 0"},{"from":"6","to":"9","label":"input 0"},{"from":"9","to":"1","label":"input 0"},{"from":"10","to":"1","label":"input 0"},{"from":"9","to":"10","label":"FilterNormalizationRule"}]}
final {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0), lt(ref_4, ref_5)"]},{"id":"6","label":"[6] Project [ref_0, ref_0, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), raw_eq(ref_0, ref_1), raw_eq(ref_1, ref_0), lt(ref_4, ref_5)"]},{"id":"10","label":"[10] Filter [gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"1","label":"[1] TableScan id: 0","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"0","to":"6","label":"input 0"},{"from":"6","to":"10","label":"input 0"},{"from":"10","to":"1","label":"input 0"}]}
----
----

run rules=(FilterMergeRule)
filter_merge_2
----
----
[0] QueryRoot
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)
  [4] Filter [lt(ref_4, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)
    [3] Filter [gt(ref_2, ref_3)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)
      [2] Filter [eq(ref_0, ref_1)]
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string
          - Pulled Up Predicates: eq(ref_0, ref_1)
        [1] TableScan id: 0
            - Num Columns: 10
            - Row Type: string, string, string, string, string, string, string, string, string, string


Optimized:
[0] QueryRoot
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)
  [6] Filter [lt(ref_4, ref_5), gt(ref_2, ref_3), eq(ref_0, ref_1)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)
    [1] TableScan id: 0
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string

initial {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"4","label":"[4] Filter [lt(ref_4, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"3","label":"[3] Filter [gt(ref_2, ref_3)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)"]},{"id":"2","label":"[2] Filter [eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_1)"]},{"id":"1","label":"[1] TableScan id: 0","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"0","to":"4","label":"input 0"},{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"}]}
step FilterMergeRule {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"4","label":"[4] Filter [lt(ref_4, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"3","label":"[3] Filter [gt(ref_2, ref_3)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)"]},{"id":"2","label":"[2] Filter [eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_1)"]},{"id":"1","label":"[1] TableScan id: 0","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"5","label":"[5] Filter [lt(ref_4, ref_5), gt(ref_2, ref_3)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]}],"edges":[{"from":"0","to":"4","label":"input 0"},{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"5","to":"2","label":"input 0"},{"from":"4","to":"5","label":"FilterMergeRule"}]}
step FilterMergeRule {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"5","label":"[5] Filter [lt(ref_4, ref_5), gt(ref_2, ref_3)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"2","label":"[2] Filter [eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_1)"]},{"id":"1","label":"[1] TableScan id: 0","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"6","label":"[6] Filter [lt(ref_4, ref_5), gt(ref_2, ref_3), eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]}],"edges":[{"from":"0","to":"5","label":"input 0"},{"from":"5","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"6","to":"1","label":"input 0"},{"from":"5","to":"6","label":"FilterMergeRule"}]}
final {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"6","label":"[6] Filter [lt(ref_4, ref_5), gt(ref_2, ref_3), eq(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)"]},{"id":"1","label":"[1] TableScan id: 0","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"0","to":"6","label":"input 0"},{"from":"6","to":"1","label":"input 0"}]}
----
----

run
mergeable_filters
----
----
[0] QueryRoot
    - Num Columns: 2
    - Row Type: string, string
    - Pulled Up Predicates: eq(ref_0, 'hello')
  [5] Project [ref_0, ref_2]
      - Num Columns: 2
      - Row Type: string, string
      - Pulled Up Predicates: eq(ref_0, 'hello')
    [4] Project [ref_0, ref_9, concat(ref_2, ref_4)]
        - Num Columns: 3
        - Row Type: string, string, string
        - Pulled Up Predicates: eq(ref_0, 'hello')
      [3] Filter [eq(ref_5, 'world')]
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string
          - Pulled Up Predicates: eq(ref_0, 'hello'), eq(ref_5, 'world')
        [2] Filter [eq(ref_0, 'hello')]
            - Num Columns: 10
            - Row Type: string, string, string, string, string, string, string, string, string, string
            - Pulled Up Predicates: eq(ref_0, 'hello')
          [1] TableScan id: 1
              - Num Columns: 10
              - Row Type: string, string, string, string, string, string, string, string, string, string


Optimized:
[0] QueryRoot
    - Num Columns: 2
    - Row Type: string, string
    - Pulled Up Predicates: raw_eq(ref_0, 'hello')
  [7] Project ['hello', concat(ref_2, ref_4)]
      - Num Columns: 2
      - Row Type: string, string
      - Pulled Up Predicates: raw_eq(ref_0, 'hello')
    [9] Filter [eq(ref_0, 'hello'), eq(ref_5, 'world')]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: eq(ref_0, 'hello'), eq(ref_5, 'world')
      [1] TableScan id: 1
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string

initial {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: eq(ref_0, 'hello')"]},{"id":"5","label":"[5] Project [ref_0, ref_2]","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: eq(ref_0, 'hello')"]},{"id":"4","label":"[4] Project [ref_0, ref_9, concat(ref_2, ref_4)]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: eq(ref_0, 'hello')"]},{"id":"3","label":"[3] Filter [eq(ref_5, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'hello'), eq(ref_5, 'world')"]},{"id":"2","label":"[2] Filter [eq(ref_0, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'hello')"]},{"id":"1","label":"[1] TableScan id: 1","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"0","to":"5","label":"input 0"},{"from":"5","to":"4","label":"input 0"},{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"}]}
step ProjectMergeRule {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: eq(ref_0, 'hello')"]},{"id":"5","label":"[5] Project [ref_0, ref_2]","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: eq(ref_0, 'hello')"]},{"id":"4","label":"[4] Project [ref_0, ref_9, concat(ref_2, ref_4)]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: eq(ref_0, 'hello')"]},{"id":"3","label":"[3] Filter [eq(ref_5, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'hello'), eq(ref_5, 'world')"]},{"id":"2","label":"[2] Filter [eq(ref_0, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'hello')"]},{"id":"1","label":"[1] TableScan id: 1","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"6","label":"[6] Project [ref_0, concat(ref_2, ref_4)]","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: eq(ref_0, 'hello')"]}],"edges":[{"from":"0","to":"5","label":"input 0"},{"from":"5","to":"4","label":"input 0"},{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"6","to":"3","label":"input 0"},{"from":"5","to":"6","label":"ProjectMergeRule"}]}
step ProjectNormalizationRule {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: eq(ref_0, 'hello')"]},{"id":"6","label":"[6] Project [ref_0, concat(ref_2, ref_4)]","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: eq(ref_0, 'hello')"]},{"id":"3","label":"[3] Filter [eq(ref_5, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'hello'), eq(ref_5, 'world')"]},{"id":"2","label":"[2] Filter [eq(ref_0, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'hello')"]},{"id":"1","label":"[1] TableScan id: 1","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"7","label":"[7] Project ['hello', concat(ref_2, ref_4)]","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello')"]}],"edges":[{"from":"0","to":"6","label":"input 0"},{"from":"6","to":"3","label":"input 0"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"7","to":"3","label":"input 0"},{"from":"6","to":"7","label":"ProjectNormalizationRule"}]}
step FilterMergeRule {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello')"]},{"id":"7","label":"[7] Project ['hello', concat(ref_2, ref_4)]","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello')"]},{"id":"3","label":"[3] Filter [eq(ref_5, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'hello'), eq(ref_5, 'world')"]},{"id":"2","label":"[2] Filter [eq(ref_0, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'hello')"]},{"id":"1","label":"[1] TableScan id: 1","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"8","label":"[8] Filter [eq(ref_5, 'world'), eq(ref_0, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'hello'), eq(ref_5, 'world')"]}],"edges":[{"from":"0","to":"7","label":"input 0"},{"from":"7","to":"3","label":"input 0"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"8","to":"1","label":"input 0"},{"from":"3","to":"8","label":"FilterMergeRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello')"]},{"id":"7","label":"[7] Project ['hello', concat(ref_2, ref_4)]","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello')"]},{"id":"8","label":"[8] Filter [eq(ref_5, 'world'), eq(ref_0, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'hello'), eq(ref_5, 'world')"]},{"id":"1","label":"[1] TableScan id: 1","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"9","label":"[9] Filter [eq(ref_0, 'hello'), eq(ref_5, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'hello'), eq(ref_5, 'world')"]}],"edges":[{"from":"0","to":"7","label":"input 0"},{"from":"7","to":"8","label":"input 0"},{"from":"8","to":"1","label":"input 0"},{"from":"9","to":"1","label":"input 0"},{"from":"8","to":"9","label":"FilterNormalizationRule"}]}
final {"nodes":[{"id":"0","label":"[0] QueryRoot","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello')"]},{"id":"7","label":"[7] Project ['hello', concat(ref_2, ref_4)]","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello')"]},{"id":"9","label":"[9] Filter [eq(ref_0, 'hello'), eq(ref_5, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'hello'), eq(ref_5, 'world')"]},{"id":"1","label":"[1] TableScan id: 1","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"0","to":"7","label":"input 0"},{"from":"7","to":"9","label":"input 0"},{"from":"9","to":"1","label":"input 0"}]}
----
----

run
filter_join_transpose_1
----
----
[5] Union
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')
  [4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')
    [2] Join [eq(ref_0, ref_5)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: eq(ref_0, ref_5)
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
      [1] TableScan id: 2, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
  [3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')
    Recurring node 2


Optimized:
[5] Union
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')
  [4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')
    [8] Join [eq(ref_0, ref_5)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')
      [6] Filter [eq(ref_2, 'hello')]
          - Num Columns: 5
          - Row Type: string, string, string, string, string
          - Pulled Up Predicates: eq(ref_2, 'hello')
        [0] TableScan id: 1, num_columns: 5
            - Num Columns: 5
            - Row Type: string, string, string, string, string
      [7] Filter [gt(ref_1, 'world')]
          - Num Columns: 5
          - Row Type: string, string, string, string, string
          - Pulled Up Predicates: gt(ref_1, 'world')
        [1] TableScan id: 2, num_columns: 5
            - Num Columns: 5
            - Row Type: string, string, string, string, string
  [3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')
    Recurring node 8
----
----

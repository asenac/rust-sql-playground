run
filter_merge_1
----
----
[2] Filter [gt(ref_2, ref_3)]
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)
  [1] Filter [eq(ref_0, ref_1)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: eq(ref_0, ref_1)
    [0] TableScan id: 0, num_columns: 10
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string


Optimized:
[3] Filter [gt(ref_2, ref_3), eq(ref_0, ref_1)]
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)
  [0] TableScan id: 0, num_columns: 10
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
----
----

run
filter_merge_2
----
----
[3] Filter [lt(ref_4, ref_5)]
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)
  [2] Filter [gt(ref_2, ref_3)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)
    [1] Filter [eq(ref_0, ref_1)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: eq(ref_0, ref_1)
      [0] TableScan id: 0, num_columns: 10
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string


Optimized:
[5] Filter [lt(ref_4, ref_5), gt(ref_2, ref_3), eq(ref_0, ref_1)]
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)
  [0] TableScan id: 0, num_columns: 10
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
----
----

run rules=(FilterMergeRule)
filter_merge_2
----
----
[3] Filter [lt(ref_4, ref_5)]
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)
  [2] Filter [gt(ref_2, ref_3)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1)
    [1] Filter [eq(ref_0, ref_1)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: eq(ref_0, ref_1)
      [0] TableScan id: 0, num_columns: 10
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string


Optimized:
[5] Filter [lt(ref_4, ref_5), gt(ref_2, ref_3), eq(ref_0, ref_1)]
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_2, ref_3), eq(ref_0, ref_1), lt(ref_4, ref_5)
  [0] TableScan id: 0, num_columns: 10
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
----
----

run
mergeable_filters
----
----
[4] Project [ref_0, ref_2]
    - Num Columns: 2
    - Row Type: string, string
    - Pulled Up Predicates: eq(ref_0, 'hello')
  [3] Project [ref_0, ref_9, concat(ref_2, ref_4)]
      - Num Columns: 3
      - Row Type: string, string, string
      - Pulled Up Predicates: eq(ref_0, 'hello')
    [2] Filter [eq(ref_5, 'world')]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: eq(ref_0, 'hello'), eq(ref_5, 'world')
      [1] Filter [eq(ref_0, 'hello')]
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string
          - Pulled Up Predicates: eq(ref_0, 'hello')
        [0] TableScan id: 1, num_columns: 10
            - Num Columns: 10
            - Row Type: string, string, string, string, string, string, string, string, string, string


Optimized:
[6] Project ['hello', concat(ref_2, ref_4)]
    - Num Columns: 2
    - Row Type: string, string
    - Pulled Up Predicates: raw_eq(ref_0, 'hello')
  [7] Filter [eq(ref_5, 'world'), eq(ref_0, 'hello')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: eq(ref_0, 'hello'), eq(ref_5, 'world')
    [0] TableScan id: 1, num_columns: 10
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
----
----

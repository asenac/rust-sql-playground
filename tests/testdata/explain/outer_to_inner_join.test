run
outer_to_inner_negative_1
----
----
[2] Filter [lt(ref_0, ref_1)]
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: lt(ref_0, ref_1)
  [1] Left Outer Join [eq(ref_0, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
    [0] TableScan id: 1, num_columns: 5
        - Num Columns: 5
        - Row Type: string, string, string, string, string
    Recurring node 0


Optimized:
[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: lt(ref_0, ref_1)
  [5] Left Outer Join [eq(ref_0, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: lt(ref_0, ref_1)
    [4] Filter [lt(ref_0, ref_1)]
        - Num Columns: 5
        - Row Type: string, string, string, string, string
        - Pulled Up Predicates: lt(ref_0, ref_1)
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
    Recurring node 0

initial {"nodes":[{"id":"2","label":"[2] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"}]}
step TopProjectionRule {"nodes":[{"id":"2","label":"[2] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"3","label":"TopProjectionRule"}]}
step FilterJoinTransposeRule {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"2","label":"[2] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"5","label":"[5] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"4","label":"[4] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]}],"edges":[{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"0","label":"input 1"},{"from":"4","to":"0","label":"input 0"},{"from":"1","to":"5","label":"FilterJoinTransposeRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"2","label":"[2] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"5","label":"[5] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"4","label":"[4] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]}],"edges":[{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"5","label":"input 0"},{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"0","label":"input 1"},{"from":"4","to":"0","label":"input 0"},{"from":"2","to":"5","label":"FilterNormalizationRule"}]}
final {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"5","label":"[5] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"4","label":"[4] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]}],"edges":[{"from":"3","to":"5","label":"input 0"},{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"0","label":"input 1"},{"from":"4","to":"0","label":"input 0"}]}
----
----

run
outer_to_inner_negative_2
----
----
[3] Union
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
  [1] Left Outer Join [eq(ref_0, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
    [0] TableScan id: 1, num_columns: 5
        - Num Columns: 5
        - Row Type: string, string, string, string, string
    Recurring node 0
  [2] Filter [lt(ref_5, ref_1)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: lt(ref_5, ref_1)
    Recurring node 1


Optimized:
[4] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
  [3] Union
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
    [1] Left Outer Join [eq(ref_0, ref_5)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
      Recurring node 0
    [2] Filter [lt(ref_5, ref_1)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: lt(ref_5, ref_1)
      Recurring node 1

initial {"nodes":[{"id":"3","label":"[3] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"2","label":"[2] Filter [lt(ref_5, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_1)"]}],"edges":[{"from":"3","to":"1","label":"input 0"},{"from":"3","to":"2","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"2","to":"1","label":"input 0"}]}
step TopProjectionRule {"nodes":[{"id":"3","label":"[3] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"2","label":"[2] Filter [lt(ref_5, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_1)"]},{"id":"4","label":"[4] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"3","to":"1","label":"input 0"},{"from":"3","to":"2","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"2","to":"1","label":"input 0"},{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"4","label":"TopProjectionRule"}]}
final {"nodes":[{"id":"4","label":"[4] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"3","label":"[3] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"2","label":"[2] Filter [lt(ref_5, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_1)"]}],"edges":[{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"1","label":"input 0"},{"from":"3","to":"2","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"2","to":"1","label":"input 0"}]}
----
----

run
outer_to_inner_1
----
----
[2] Filter [lt(ref_5, ref_1)]
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: lt(ref_5, ref_1)
  [1] Left Outer Join [eq(ref_0, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
    [0] TableScan id: 1, num_columns: 5
        - Num Columns: 5
        - Row Type: string, string, string, string, string
    Recurring node 0


Optimized:
[6] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9]
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0), lt(ref_0, ref_1)
  [8] Inner Join [eq(ref_0, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)
    [7] Filter [lt(ref_0, ref_1)]
        - Num Columns: 5
        - Row Type: string, string, string, string, string
        - Pulled Up Predicates: lt(ref_0, ref_1)
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
    Recurring node 0

initial {"nodes":[{"id":"2","label":"[2] Filter [lt(ref_5, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_1)"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"}]}
step TopProjectionRule {"nodes":[{"id":"2","label":"[2] Filter [lt(ref_5, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_1)"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_1)"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"3","label":"TopProjectionRule"}]}
step OuterToInnerJoinRule {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_1)"]},{"id":"2","label":"[2] Filter [lt(ref_5, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_1)"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"4","label":"[4] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]}],"edges":[{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"4","to":"0","label":"input 0"},{"from":"4","to":"0","label":"input 1"},{"from":"1","to":"4","label":"OuterToInnerJoinRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_5, ref_1)"]},{"id":"2","label":"[2] Filter [lt(ref_5, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_5, ref_1)"]},{"id":"4","label":"[4] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"5","label":"[5] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]}],"edges":[{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"4","label":"input 0"},{"from":"4","to":"0","label":"input 0"},{"from":"4","to":"0","label":"input 1"},{"from":"5","to":"4","label":"input 0"},{"from":"2","to":"5","label":"FilterNormalizationRule"}]}
step ProjectNormalizationRule {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"5","label":"[5] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"4","label":"[4] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"6","label":"[6] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0), lt(ref_0, ref_1)"]}],"edges":[{"from":"3","to":"5","label":"input 0"},{"from":"5","to":"4","label":"input 0"},{"from":"4","to":"0","label":"input 0"},{"from":"4","to":"0","label":"input 1"},{"from":"6","to":"5","label":"input 0"},{"from":"3","to":"6","label":"ProjectNormalizationRule"}]}
step FilterJoinTransposeRule {"nodes":[{"id":"6","label":"[6] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0), lt(ref_0, ref_1)"]},{"id":"5","label":"[5] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"4","label":"[4] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"7","label":"[7] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]}],"edges":[{"from":"6","to":"5","label":"input 0"},{"from":"5","to":"4","label":"input 0"},{"from":"4","to":"0","label":"input 0"},{"from":"4","to":"0","label":"input 1"},{"from":"8","to":"7","label":"input 0"},{"from":"8","to":"0","label":"input 1"},{"from":"7","to":"0","label":"input 0"},{"from":"4","to":"8","label":"FilterJoinTransposeRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"6","label":"[6] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0), lt(ref_0, ref_1)"]},{"id":"5","label":"[5] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"7","label":"[7] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]}],"edges":[{"from":"6","to":"5","label":"input 0"},{"from":"5","to":"8","label":"input 0"},{"from":"8","to":"7","label":"input 0"},{"from":"8","to":"0","label":"input 1"},{"from":"7","to":"0","label":"input 0"},{"from":"5","to":"8","label":"FilterNormalizationRule"}]}
final {"nodes":[{"id":"6","label":"[6] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0), lt(ref_0, ref_1)"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"7","label":"[7] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]}],"edges":[{"from":"6","to":"8","label":"input 0"},{"from":"8","to":"7","label":"input 0"},{"from":"8","to":"0","label":"input 1"},{"from":"7","to":"0","label":"input 0"}]}
----
----

run
outer_to_inner_2
----
----
[2] Filter [lt(ref_5, ref_1)]
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: lt(ref_5, ref_1)
  [1] Right Outer Join [eq(ref_0, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
    [0] TableScan id: 1, num_columns: 5
        - Num Columns: 5
        - Row Type: string, string, string, string, string
    Recurring node 0


Optimized:
[6] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9]
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0), lt(ref_0, ref_1)
  [8] Inner Join [eq(ref_0, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)
    [7] Filter [lt(ref_0, ref_1)]
        - Num Columns: 5
        - Row Type: string, string, string, string, string
        - Pulled Up Predicates: lt(ref_0, ref_1)
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
    Recurring node 0

initial {"nodes":[{"id":"2","label":"[2] Filter [lt(ref_5, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_1)"]},{"id":"1","label":"[1] Right Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"}]}
step TopProjectionRule {"nodes":[{"id":"2","label":"[2] Filter [lt(ref_5, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_1)"]},{"id":"1","label":"[1] Right Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_1)"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"3","label":"TopProjectionRule"}]}
step OuterToInnerJoinRule {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_1)"]},{"id":"2","label":"[2] Filter [lt(ref_5, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_1)"]},{"id":"1","label":"[1] Right Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"4","label":"[4] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]}],"edges":[{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"4","to":"0","label":"input 0"},{"from":"4","to":"0","label":"input 1"},{"from":"1","to":"4","label":"OuterToInnerJoinRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_5, ref_1)"]},{"id":"2","label":"[2] Filter [lt(ref_5, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_5, ref_1)"]},{"id":"4","label":"[4] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"5","label":"[5] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]}],"edges":[{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"4","label":"input 0"},{"from":"4","to":"0","label":"input 0"},{"from":"4","to":"0","label":"input 1"},{"from":"5","to":"4","label":"input 0"},{"from":"2","to":"5","label":"FilterNormalizationRule"}]}
step ProjectNormalizationRule {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"5","label":"[5] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"4","label":"[4] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"6","label":"[6] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0), lt(ref_0, ref_1)"]}],"edges":[{"from":"3","to":"5","label":"input 0"},{"from":"5","to":"4","label":"input 0"},{"from":"4","to":"0","label":"input 0"},{"from":"4","to":"0","label":"input 1"},{"from":"6","to":"5","label":"input 0"},{"from":"3","to":"6","label":"ProjectNormalizationRule"}]}
step FilterJoinTransposeRule {"nodes":[{"id":"6","label":"[6] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0), lt(ref_0, ref_1)"]},{"id":"5","label":"[5] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"4","label":"[4] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"7","label":"[7] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]}],"edges":[{"from":"6","to":"5","label":"input 0"},{"from":"5","to":"4","label":"input 0"},{"from":"4","to":"0","label":"input 0"},{"from":"4","to":"0","label":"input 1"},{"from":"8","to":"7","label":"input 0"},{"from":"8","to":"0","label":"input 1"},{"from":"7","to":"0","label":"input 0"},{"from":"4","to":"8","label":"FilterJoinTransposeRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"6","label":"[6] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0), lt(ref_0, ref_1)"]},{"id":"5","label":"[5] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"7","label":"[7] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]}],"edges":[{"from":"6","to":"5","label":"input 0"},{"from":"5","to":"8","label":"input 0"},{"from":"8","to":"7","label":"input 0"},{"from":"8","to":"0","label":"input 1"},{"from":"7","to":"0","label":"input 0"},{"from":"5","to":"8","label":"FilterNormalizationRule"}]}
final {"nodes":[{"id":"6","label":"[6] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0), lt(ref_0, ref_1)"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"7","label":"[7] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]}],"edges":[{"from":"6","to":"8","label":"input 0"},{"from":"8","to":"7","label":"input 0"},{"from":"8","to":"0","label":"input 1"},{"from":"7","to":"0","label":"input 0"}]}
----
----

run
outer_to_inner_3
----
----
[4] Union
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
  [2] Filter [lt(ref_5, ref_1)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: lt(ref_5, ref_1)
    [1] Left Outer Join [eq(ref_0, ref_5)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
      Recurring node 0
  [3] Filter [lt(ref_5, ref_2)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: lt(ref_5, ref_2)
    Recurring node 1


Optimized:
[13] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_5, ref_6, ref_7, ref_8]
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0)
  [12] Union
      - Num Columns: 9
      - Row Type: string, string, string, string, string, string, string, string, string
    [10] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_6, ref_7, ref_8, ref_9]
        - Num Columns: 9
        - Row Type: string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: lt(ref_0, ref_1)
      [7] Filter [lt(ref_0, ref_1)]
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string
          - Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)
        [6] Inner Join [eq(ref_0, ref_5)]
            - Num Columns: 10
            - Row Type: string, string, string, string, string, string, string, string, string, string
            - Pulled Up Predicates: eq(ref_0, ref_5)
          [0] TableScan id: 1, num_columns: 5
              - Num Columns: 5
              - Row Type: string, string, string, string, string
          Recurring node 0
    [11] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_6, ref_7, ref_8, ref_9]
        - Num Columns: 9
        - Row Type: string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: lt(ref_0, ref_2)
      [8] Filter [lt(ref_0, ref_2)]
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string
          - Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_2)
        Recurring node 6

initial {"nodes":[{"id":"4","label":"[4] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"2","label":"[2] Filter [lt(ref_5, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_1)"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_5, ref_2)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_2)"]}],"edges":[{"from":"4","to":"2","label":"input 0"},{"from":"4","to":"3","label":"input 1"},{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"3","to":"1","label":"input 0"}]}
step TopProjectionRule {"nodes":[{"id":"4","label":"[4] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"2","label":"[2] Filter [lt(ref_5, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_1)"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_5, ref_2)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_2)"]},{"id":"5","label":"[5] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"4","to":"2","label":"input 0"},{"from":"4","to":"3","label":"input 1"},{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"3","to":"1","label":"input 0"},{"from":"5","to":"4","label":"input 0"},{"from":"4","to":"5","label":"TopProjectionRule"}]}
step OuterToInnerJoinRule {"nodes":[{"id":"5","label":"[5] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"4","label":"[4] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"2","label":"[2] Filter [lt(ref_5, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_1)"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_5, ref_2)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_5, ref_2)"]},{"id":"6","label":"[6] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"4","to":"2","label":"input 0"},{"from":"4","to":"3","label":"input 1"},{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"3","to":"1","label":"input 0"},{"from":"6","to":"0","label":"input 0"},{"from":"6","to":"0","label":"input 1"},{"from":"1","to":"6","label":"OuterToInnerJoinRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"5","label":"[5] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"4","label":"[4] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"2","label":"[2] Filter [lt(ref_5, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_5, ref_1)"]},{"id":"6","label":"[6] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_5, ref_2)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_5, ref_2)"]},{"id":"7","label":"[7] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"4","to":"2","label":"input 0"},{"from":"4","to":"3","label":"input 1"},{"from":"2","to":"6","label":"input 0"},{"from":"6","to":"0","label":"input 0"},{"from":"6","to":"0","label":"input 1"},{"from":"3","to":"6","label":"input 0"},{"from":"7","to":"6","label":"input 0"},{"from":"2","to":"7","label":"FilterNormalizationRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"5","label":"[5] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"4","label":"[4] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"7","label":"[7] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"6","label":"[6] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_5, ref_2)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_5, ref_2)"]},{"id":"8","label":"[8] Filter [lt(ref_0, ref_2)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_2)"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"4","to":"7","label":"input 0"},{"from":"4","to":"3","label":"input 1"},{"from":"7","to":"6","label":"input 0"},{"from":"6","to":"0","label":"input 0"},{"from":"6","to":"0","label":"input 1"},{"from":"3","to":"6","label":"input 0"},{"from":"8","to":"6","label":"input 0"},{"from":"3","to":"8","label":"FilterNormalizationRule"}]}
step ProjectNormalizationRule {"nodes":[{"id":"5","label":"[5] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"4","label":"[4] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"7","label":"[7] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"6","label":"[6] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"8","label":"[8] Filter [lt(ref_0, ref_2)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_2)"]},{"id":"9","label":"[9] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0)"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"4","to":"7","label":"input 0"},{"from":"4","to":"8","label":"input 1"},{"from":"7","to":"6","label":"input 0"},{"from":"6","to":"0","label":"input 0"},{"from":"6","to":"0","label":"input 1"},{"from":"8","to":"6","label":"input 0"},{"from":"9","to":"4","label":"input 0"},{"from":"5","to":"9","label":"ProjectNormalizationRule"}]}
step UnionPruningRule {"nodes":[{"id":"9","label":"[9] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0)"]},{"id":"4","label":"[4] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"7","label":"[7] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"6","label":"[6] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"8","label":"[8] Filter [lt(ref_0, ref_2)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_2)"]},{"id":"13","label":"[13] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_5, ref_6, ref_7, ref_8]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0)"]},{"id":"12","label":"[12] Union","annotations":["Num Columns: 9","Row Type: string, string, string, string, string, string, string, string, string"]},{"id":"10","label":"[10] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 9","Row Type: string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"11","label":"[11] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 9","Row Type: string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_2)"]}],"edges":[{"from":"9","to":"4","label":"input 0"},{"from":"4","to":"7","label":"input 0"},{"from":"4","to":"8","label":"input 1"},{"from":"7","to":"6","label":"input 0"},{"from":"6","to":"0","label":"input 0"},{"from":"6","to":"0","label":"input 1"},{"from":"8","to":"6","label":"input 0"},{"from":"13","to":"12","label":"input 0"},{"from":"12","to":"10","label":"input 0"},{"from":"12","to":"11","label":"input 1"},{"from":"10","to":"7","label":"input 0"},{"from":"11","to":"8","label":"input 0"},{"from":"9","to":"13","label":"UnionPruningRule"}]}
final {"nodes":[{"id":"13","label":"[13] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_5, ref_6, ref_7, ref_8]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0)"]},{"id":"12","label":"[12] Union","annotations":["Num Columns: 9","Row Type: string, string, string, string, string, string, string, string, string"]},{"id":"10","label":"[10] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 9","Row Type: string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_1)"]},{"id":"7","label":"[7] Filter [lt(ref_0, ref_1)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_1)"]},{"id":"6","label":"[6] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"11","label":"[11] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 9","Row Type: string, string, string, string, string, string, string, string, string","Pulled Up Predicates: lt(ref_0, ref_2)"]},{"id":"8","label":"[8] Filter [lt(ref_0, ref_2)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), lt(ref_0, ref_2)"]}],"edges":[{"from":"13","to":"12","label":"input 0"},{"from":"12","to":"10","label":"input 0"},{"from":"12","to":"11","label":"input 1"},{"from":"10","to":"7","label":"input 0"},{"from":"7","to":"6","label":"input 0"},{"from":"6","to":"0","label":"input 0"},{"from":"6","to":"0","label":"input 1"},{"from":"11","to":"8","label":"input 0"},{"from":"8","to":"6","label":"input 0"}]}
----
----

run
outer_to_inner_4
----
----
[2] Inner Join [eq(ref_0, ref_10)]
    - Num Columns: 15
    - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: eq(ref_0, ref_10)
  [0] TableScan id: 1, num_columns: 5
      - Num Columns: 5
      - Row Type: string, string, string, string, string
  [1] Left Outer Join [eq(ref_0, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
    Recurring node 0
    Recurring node 0


Optimized:
[19] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_9, ref_0, ref_6, ref_7, ref_0, ref_10, ref_11, ref_12, ref_13]
    - Num Columns: 15
    - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: raw_eq(ref_0, ref_10), raw_eq(ref_5, ref_10), raw_eq(ref_7, ref_10), raw_eq(ref_10, ref_7)
  [15] Inner Join [eq(ref_0, ref_5)]
      - Num Columns: 14
      - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: eq(ref_0, ref_5)
    [0] TableScan id: 1, num_columns: 5
        - Num Columns: 5
        - Row Type: string, string, string, string, string
    [14] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_6, ref_7, ref_8, ref_9]
        - Num Columns: 9
        - Row Type: string, string, string, string, string, string, string, string, string
      [5] Inner Join [eq(ref_0, ref_5)]
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string
          - Pulled Up Predicates: eq(ref_0, ref_5)
        Recurring node 0
        Recurring node 0

initial {"nodes":[{"id":"2","label":"[2] Inner Join [eq(ref_0, ref_10)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_10)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"}]}
step TopProjectionRule {"nodes":[{"id":"2","label":"[2] Inner Join [eq(ref_0, ref_10)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_10)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_10)"]}],"edges":[{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"3","label":"TopProjectionRule"}]}
step ProjectNormalizationRule {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_10)"]},{"id":"2","label":"[2] Inner Join [eq(ref_0, ref_10)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_10)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"4","label":"[4] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_0, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_10), raw_eq(ref_10, ref_0)"]}],"edges":[{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"4","to":"2","label":"input 0"},{"from":"3","to":"4","label":"ProjectNormalizationRule"}]}
step OuterToInnerJoinRule {"nodes":[{"id":"4","label":"[4] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_0, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_10), raw_eq(ref_10, ref_0)"]},{"id":"2","label":"[2] Inner Join [eq(ref_0, ref_10)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_10)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"5","label":"[5] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]}],"edges":[{"from":"4","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"5","to":"0","label":"input 0"},{"from":"5","to":"0","label":"input 1"},{"from":"1","to":"5","label":"OuterToInnerJoinRule"}]}
step ProjectNormalizationRule {"nodes":[{"id":"4","label":"[4] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_0, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_10), raw_eq(ref_10, ref_0)"]},{"id":"2","label":"[2] Inner Join [eq(ref_0, ref_10)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_10), eq(ref_5, ref_10)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"5","label":"[5] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"6","label":"[6] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9, ref_0, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_10), raw_eq(ref_5, ref_10), raw_eq(ref_10, ref_5)"]}],"edges":[{"from":"4","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"5","label":"input 1"},{"from":"5","to":"0","label":"input 0"},{"from":"5","to":"0","label":"input 1"},{"from":"6","to":"2","label":"input 0"},{"from":"4","to":"6","label":"ProjectNormalizationRule"}]}
step JoinPruningRule {"nodes":[{"id":"6","label":"[6] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9, ref_0, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_10), raw_eq(ref_5, ref_10), raw_eq(ref_10, ref_5)"]},{"id":"2","label":"[2] Inner Join [eq(ref_0, ref_10)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_10), eq(ref_5, ref_10)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"5","label":"[5] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"11","label":"[11] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_5, ref_6, ref_7, ref_8, ref_0, ref_9, ref_10, ref_11, ref_12]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_10), raw_eq(ref_5, ref_10), raw_eq(ref_10, ref_5)"]},{"id":"10","label":"[10] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_10, ref_11, ref_12, ref_13]","annotations":["Num Columns: 13","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"9","label":"[9] Inner Join [eq(ref_0, ref_9)]","annotations":["Num Columns: 14","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_9)"]},{"id":"7","label":"[7] Project [ref_0, ref_1, ref_2, ref_3, ref_4]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"8","label":"[8] Project [ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 9","Row Type: string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"6","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"5","label":"input 1"},{"from":"5","to":"0","label":"input 0"},{"from":"5","to":"0","label":"input 1"},{"from":"11","to":"10","label":"input 0"},{"from":"10","to":"9","label":"input 0"},{"from":"9","to":"7","label":"input 0"},{"from":"9","to":"8","label":"input 1"},{"from":"7","to":"0","label":"input 0"},{"from":"8","to":"5","label":"input 0"},{"from":"6","to":"11","label":"JoinPruningRule"}]}
step ProjectMergeRule {"nodes":[{"id":"11","label":"[11] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_5, ref_6, ref_7, ref_8, ref_0, ref_9, ref_10, ref_11, ref_12]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_10), raw_eq(ref_5, ref_10), raw_eq(ref_10, ref_5)"]},{"id":"10","label":"[10] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_10, ref_11, ref_12, ref_13]","annotations":["Num Columns: 13","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"9","label":"[9] Inner Join [eq(ref_0, ref_9)]","annotations":["Num Columns: 14","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_9)"]},{"id":"7","label":"[7] Project [ref_0, ref_1, ref_2, ref_3, ref_4]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"8","label":"[8] Project [ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 9","Row Type: string, string, string, string, string, string, string, string, string"]},{"id":"5","label":"[5] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"12","label":"[12] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_5, ref_6, ref_7, ref_8, ref_0, ref_10, ref_11, ref_12, ref_13]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_10), raw_eq(ref_5, ref_10), raw_eq(ref_10, ref_5)"]}],"edges":[{"from":"11","to":"10","label":"input 0"},{"from":"10","to":"9","label":"input 0"},{"from":"9","to":"7","label":"input 0"},{"from":"9","to":"8","label":"input 1"},{"from":"7","to":"0","label":"input 0"},{"from":"8","to":"5","label":"input 0"},{"from":"5","to":"0","label":"input 0"},{"from":"5","to":"0","label":"input 1"},{"from":"12","to":"9","label":"input 0"},{"from":"11","to":"12","label":"ProjectMergeRule"}]}
step RemovePassthroughProjectRule {"nodes":[{"id":"12","label":"[12] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_5, ref_6, ref_7, ref_8, ref_0, ref_10, ref_11, ref_12, ref_13]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_10), raw_eq(ref_5, ref_10), raw_eq(ref_10, ref_5)"]},{"id":"9","label":"[9] Inner Join [eq(ref_0, ref_9)]","annotations":["Num Columns: 14","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_9)"]},{"id":"7","label":"[7] Project [ref_0, ref_1, ref_2, ref_3, ref_4]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"8","label":"[8] Project [ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 9","Row Type: string, string, string, string, string, string, string, string, string"]},{"id":"5","label":"[5] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]}],"edges":[{"from":"12","to":"9","label":"input 0"},{"from":"9","to":"7","label":"input 0"},{"from":"9","to":"8","label":"input 1"},{"from":"7","to":"0","label":"input 0"},{"from":"8","to":"5","label":"input 0"},{"from":"5","to":"0","label":"input 0"},{"from":"5","to":"0","label":"input 1"},{"from":"7","to":"0","label":"RemovePassthroughProjectRule"}]}
step ProjectNormalizationRule {"nodes":[{"id":"12","label":"[12] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_5, ref_6, ref_7, ref_8, ref_0, ref_10, ref_11, ref_12, ref_13]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_10), raw_eq(ref_5, ref_10), raw_eq(ref_10, ref_5)"]},{"id":"9","label":"[9] Inner Join [eq(ref_0, ref_9)]","annotations":["Num Columns: 14","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_9)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"8","label":"[8] Project [ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 9","Row Type: string, string, string, string, string, string, string, string, string"]},{"id":"5","label":"[5] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"13","label":"[13] Project [ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 9","Row Type: string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"12","to":"9","label":"input 0"},{"from":"9","to":"0","label":"input 0"},{"from":"9","to":"8","label":"input 1"},{"from":"8","to":"5","label":"input 0"},{"from":"5","to":"0","label":"input 0"},{"from":"5","to":"0","label":"input 1"},{"from":"13","to":"5","label":"input 0"},{"from":"8","to":"13","label":"ProjectNormalizationRule"}]}
step JoinProjectTransposeRule {"nodes":[{"id":"12","label":"[12] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_5, ref_6, ref_7, ref_8, ref_0, ref_10, ref_11, ref_12, ref_13]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_10), raw_eq(ref_5, ref_10), raw_eq(ref_10, ref_5)"]},{"id":"9","label":"[9] Inner Join [eq(ref_0, ref_9)]","annotations":["Num Columns: 14","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_9)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"13","label":"[13] Project [ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 9","Row Type: string, string, string, string, string, string, string, string, string"]},{"id":"5","label":"[5] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"16","label":"[16] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_9, ref_5, ref_6, ref_7, ref_8, ref_10, ref_11, ref_12, ref_13]","annotations":["Num Columns: 14","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_6)"]},{"id":"15","label":"[15] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 14","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"14","label":"[14] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 9","Row Type: string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"12","to":"9","label":"input 0"},{"from":"9","to":"0","label":"input 0"},{"from":"9","to":"13","label":"input 1"},{"from":"13","to":"5","label":"input 0"},{"from":"5","to":"0","label":"input 0"},{"from":"5","to":"0","label":"input 1"},{"from":"16","to":"15","label":"input 0"},{"from":"15","to":"0","label":"input 0"},{"from":"15","to":"14","label":"input 1"},{"from":"14","to":"5","label":"input 0"},{"from":"9","to":"16","label":"JoinProjectTransposeRule"}]}
step ProjectNormalizationRule {"nodes":[{"id":"12","label":"[12] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_5, ref_6, ref_7, ref_8, ref_0, ref_10, ref_11, ref_12, ref_13]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_7), raw_eq(ref_0, ref_10), raw_eq(ref_5, ref_10), raw_eq(ref_10, ref_5)"]},{"id":"16","label":"[16] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_9, ref_5, ref_6, ref_7, ref_8, ref_10, ref_11, ref_12, ref_13]","annotations":["Num Columns: 14","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_6)"]},{"id":"15","label":"[15] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 14","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"14","label":"[14] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 9","Row Type: string, string, string, string, string, string, string, string, string"]},{"id":"5","label":"[5] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"17","label":"[17] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_9, ref_0, ref_6, ref_7, ref_8, ref_10, ref_11, ref_12, ref_13]","annotations":["Num Columns: 14","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_6), raw_eq(ref_6, ref_0)"]}],"edges":[{"from":"12","to":"16","label":"input 0"},{"from":"16","to":"15","label":"input 0"},{"from":"15","to":"0","label":"input 0"},{"from":"15","to":"14","label":"input 1"},{"from":"14","to":"5","label":"input 0"},{"from":"5","to":"0","label":"input 0"},{"from":"5","to":"0","label":"input 1"},{"from":"17","to":"15","label":"input 0"},{"from":"16","to":"17","label":"ProjectNormalizationRule"}]}
step ProjectNormalizationRule {"nodes":[{"id":"12","label":"[12] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_5, ref_6, ref_7, ref_8, ref_0, ref_10, ref_11, ref_12, ref_13]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_7), raw_eq(ref_0, ref_10), raw_eq(ref_5, ref_10), raw_eq(ref_7, ref_0), raw_eq(ref_10, ref_5)"]},{"id":"17","label":"[17] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_9, ref_0, ref_6, ref_7, ref_8, ref_10, ref_11, ref_12, ref_13]","annotations":["Num Columns: 14","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_6), raw_eq(ref_6, ref_0)"]},{"id":"15","label":"[15] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 14","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"14","label":"[14] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 9","Row Type: string, string, string, string, string, string, string, string, string"]},{"id":"5","label":"[5] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"18","label":"[18] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_5, ref_0, ref_7, ref_8, ref_0, ref_10, ref_11, ref_12, ref_13]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_10), raw_eq(ref_5, ref_10), raw_eq(ref_7, ref_10), raw_eq(ref_10, ref_7)"]}],"edges":[{"from":"12","to":"17","label":"input 0"},{"from":"17","to":"15","label":"input 0"},{"from":"15","to":"0","label":"input 0"},{"from":"15","to":"14","label":"input 1"},{"from":"14","to":"5","label":"input 0"},{"from":"5","to":"0","label":"input 0"},{"from":"5","to":"0","label":"input 1"},{"from":"18","to":"17","label":"input 0"},{"from":"12","to":"18","label":"ProjectNormalizationRule"}]}
step ProjectMergeRule {"nodes":[{"id":"18","label":"[18] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_5, ref_0, ref_7, ref_8, ref_0, ref_10, ref_11, ref_12, ref_13]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_10), raw_eq(ref_5, ref_10), raw_eq(ref_7, ref_10), raw_eq(ref_10, ref_7)"]},{"id":"17","label":"[17] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_9, ref_0, ref_6, ref_7, ref_8, ref_10, ref_11, ref_12, ref_13]","annotations":["Num Columns: 14","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_6), raw_eq(ref_6, ref_0)"]},{"id":"15","label":"[15] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 14","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"14","label":"[14] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 9","Row Type: string, string, string, string, string, string, string, string, string"]},{"id":"5","label":"[5] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"19","label":"[19] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_9, ref_0, ref_6, ref_7, ref_0, ref_10, ref_11, ref_12, ref_13]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_10), raw_eq(ref_5, ref_10), raw_eq(ref_7, ref_10), raw_eq(ref_10, ref_7)"]}],"edges":[{"from":"18","to":"17","label":"input 0"},{"from":"17","to":"15","label":"input 0"},{"from":"15","to":"0","label":"input 0"},{"from":"15","to":"14","label":"input 1"},{"from":"14","to":"5","label":"input 0"},{"from":"5","to":"0","label":"input 0"},{"from":"5","to":"0","label":"input 1"},{"from":"19","to":"15","label":"input 0"},{"from":"18","to":"19","label":"ProjectMergeRule"}]}
final {"nodes":[{"id":"19","label":"[19] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_9, ref_0, ref_6, ref_7, ref_0, ref_10, ref_11, ref_12, ref_13]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_10), raw_eq(ref_5, ref_10), raw_eq(ref_7, ref_10), raw_eq(ref_10, ref_7)"]},{"id":"15","label":"[15] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 14","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"14","label":"[14] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_6, ref_7, ref_8, ref_9]","annotations":["Num Columns: 9","Row Type: string, string, string, string, string, string, string, string, string"]},{"id":"5","label":"[5] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]}],"edges":[{"from":"19","to":"15","label":"input 0"},{"from":"15","to":"0","label":"input 0"},{"from":"15","to":"14","label":"input 1"},{"from":"14","to":"5","label":"input 0"},{"from":"5","to":"0","label":"input 0"},{"from":"5","to":"0","label":"input 1"}]}
----
----

run
outer_to_inner_5
----
----
[2] Inner Join [eq(ref_0, ref_5)]
    - Num Columns: 15
    - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: eq(ref_0, ref_5)
  [1] Left Outer Join [eq(ref_0, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
    [0] TableScan id: 1, num_columns: 5
        - Num Columns: 5
        - Row Type: string, string, string, string, string
    Recurring node 0
  Recurring node 0


Optimized:
[4] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]
    - Num Columns: 15
    - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0)
  [2] Inner Join [eq(ref_0, ref_5)]
      - Num Columns: 15
      - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: eq(ref_0, ref_5)
    [5] Inner Join [eq(ref_0, ref_5)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: eq(ref_0, ref_5)
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
      Recurring node 0
    Recurring node 0

initial {"nodes":[{"id":"2","label":"[2] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"2","to":"0","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"}]}
step TopProjectionRule {"nodes":[{"id":"2","label":"[2] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"2","to":"0","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"3","label":"TopProjectionRule"}]}
step ProjectNormalizationRule {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"2","label":"[2] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"4","label":"[4] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0)"]}],"edges":[{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"2","to":"0","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"4","to":"2","label":"input 0"},{"from":"3","to":"4","label":"ProjectNormalizationRule"}]}
step OuterToInnerJoinRule {"nodes":[{"id":"4","label":"[4] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0)"]},{"id":"2","label":"[2] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"5","label":"[5] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]}],"edges":[{"from":"4","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"2","to":"0","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"5","to":"0","label":"input 0"},{"from":"5","to":"0","label":"input 1"},{"from":"1","to":"5","label":"OuterToInnerJoinRule"}]}
final {"nodes":[{"id":"4","label":"[4] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0)"]},{"id":"2","label":"[2] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"5","label":"[5] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]}],"edges":[{"from":"4","to":"2","label":"input 0"},{"from":"2","to":"5","label":"input 0"},{"from":"2","to":"0","label":"input 1"},{"from":"5","to":"0","label":"input 0"},{"from":"5","to":"0","label":"input 1"}]}
----
----

run
outer_to_inner_negative_3
----
----
[2] Inner Join [eq(ref_0, ref_5)]
    - Num Columns: 15
    - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: eq(ref_0, ref_5)
  [0] TableScan id: 1, num_columns: 5
      - Num Columns: 5
      - Row Type: string, string, string, string, string
  [1] Left Outer Join [eq(ref_0, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
    Recurring node 0
    Recurring node 0


Optimized:
[4] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]
    - Num Columns: 15
    - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0)
  [2] Inner Join [eq(ref_0, ref_5)]
      - Num Columns: 15
      - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: eq(ref_0, ref_5)
    [0] TableScan id: 1, num_columns: 5
        - Num Columns: 5
        - Row Type: string, string, string, string, string
    [1] Left Outer Join [eq(ref_0, ref_5)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
      Recurring node 0
      Recurring node 0

initial {"nodes":[{"id":"2","label":"[2] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"}]}
step TopProjectionRule {"nodes":[{"id":"2","label":"[2] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]}],"edges":[{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"3","label":"TopProjectionRule"}]}
step ProjectNormalizationRule {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"2","label":"[2] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"4","label":"[4] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0)"]}],"edges":[{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"4","to":"2","label":"input 0"},{"from":"3","to":"4","label":"ProjectNormalizationRule"}]}
final {"nodes":[{"id":"4","label":"[4] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_0, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: raw_eq(ref_0, ref_5), raw_eq(ref_5, ref_0)"]},{"id":"2","label":"[2] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"4","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"}]}
----
----

run
outer_to_inner_negative_4
----
----
[2] Left Outer Join [eq(ref_0, ref_10)]
    - Num Columns: 15
    - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
  [1] Left Outer Join [eq(ref_0, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
    [0] TableScan id: 1, num_columns: 5
        - Num Columns: 5
        - Row Type: string, string, string, string, string
    Recurring node 0
  Recurring node 0


Optimized:
[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]
    - Num Columns: 15
    - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
  [2] Left Outer Join [eq(ref_0, ref_10)]
      - Num Columns: 15
      - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
    [1] Left Outer Join [eq(ref_0, ref_5)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
      Recurring node 0
    Recurring node 0

initial {"nodes":[{"id":"2","label":"[2] Left Outer Join [eq(ref_0, ref_10)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"2","to":"0","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"}]}
step TopProjectionRule {"nodes":[{"id":"2","label":"[2] Left Outer Join [eq(ref_0, ref_10)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"2","to":"0","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"3","label":"TopProjectionRule"}]}
final {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"2","label":"[2] Left Outer Join [eq(ref_0, ref_10)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]}],"edges":[{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"2","to":"0","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"}]}
----
----

run
outer_to_inner_6
----
----
[2] Left Outer Join [eq(ref_0, ref_10)]
    - Num Columns: 15
    - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
  [0] TableScan id: 1, num_columns: 5
      - Num Columns: 5
      - Row Type: string, string, string, string, string
  [1] Left Outer Join [eq(ref_0, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
    Recurring node 0
    Recurring node 0


Optimized:
[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]
    - Num Columns: 15
    - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
  [2] Left Outer Join [eq(ref_0, ref_10)]
      - Num Columns: 15
      - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
    [0] TableScan id: 1, num_columns: 5
        - Num Columns: 5
        - Row Type: string, string, string, string, string
    [4] Inner Join [eq(ref_0, ref_5)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: eq(ref_0, ref_5)
      Recurring node 0
      Recurring node 0

initial {"nodes":[{"id":"2","label":"[2] Left Outer Join [eq(ref_0, ref_10)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"}]}
step TopProjectionRule {"nodes":[{"id":"2","label":"[2] Left Outer Join [eq(ref_0, ref_10)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"3","label":"TopProjectionRule"}]}
step OuterToInnerJoinRule {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"2","label":"[2] Left Outer Join [eq(ref_0, ref_10)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"4","label":"[4] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]}],"edges":[{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"4","to":"0","label":"input 0"},{"from":"4","to":"0","label":"input 1"},{"from":"1","to":"4","label":"OuterToInnerJoinRule"}]}
final {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"2","label":"[2] Left Outer Join [eq(ref_0, ref_10)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"4","label":"[4] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]}],"edges":[{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"4","label":"input 1"},{"from":"4","to":"0","label":"input 0"},{"from":"4","to":"0","label":"input 1"}]}
----
----

run
outer_to_inner_7
----
----
[2] Right Outer Join [eq(ref_5, ref_10)]
    - Num Columns: 15
    - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
  [1] Left Outer Join [eq(ref_0, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
    [0] TableScan id: 1, num_columns: 5
        - Num Columns: 5
        - Row Type: string, string, string, string, string
    Recurring node 0
  Recurring node 0


Optimized:
[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]
    - Num Columns: 15
    - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
  [2] Right Outer Join [eq(ref_5, ref_10)]
      - Num Columns: 15
      - Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string
    [4] Inner Join [eq(ref_0, ref_5)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: eq(ref_0, ref_5)
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
      Recurring node 0
    Recurring node 0

initial {"nodes":[{"id":"2","label":"[2] Right Outer Join [eq(ref_5, ref_10)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"2","to":"0","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"}]}
step TopProjectionRule {"nodes":[{"id":"2","label":"[2] Right Outer Join [eq(ref_5, ref_10)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"2","to":"0","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"3","label":"TopProjectionRule"}]}
step OuterToInnerJoinRule {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"2","label":"[2] Right Outer Join [eq(ref_5, ref_10)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"1","label":"[1] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"4","label":"[4] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]}],"edges":[{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"2","to":"0","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"1","to":"0","label":"input 1"},{"from":"4","to":"0","label":"input 0"},{"from":"4","to":"0","label":"input 1"},{"from":"1","to":"4","label":"OuterToInnerJoinRule"}]}
final {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2, ref_3, ref_4, ref_5, ref_6, ref_7, ref_8, ref_9, ref_10, ref_11, ref_12, ref_13, ref_14]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"2","label":"[2] Right Outer Join [eq(ref_5, ref_10)]","annotations":["Num Columns: 15","Row Type: string, string, string, string, string, string, string, string, string, string, string, string, string, string, string"]},{"id":"4","label":"[4] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]}],"edges":[{"from":"3","to":"2","label":"input 0"},{"from":"2","to":"4","label":"input 0"},{"from":"2","to":"0","label":"input 1"},{"from":"4","to":"0","label":"input 0"},{"from":"4","to":"0","label":"input 1"}]}
----
----

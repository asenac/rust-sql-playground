run
redundant_key
----
----
[2] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []
    - Num Columns: 3
    - Row Type: string, string, string
    - Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))
    - Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]
  [1] Project [ref_0, concat(ref_0, ref_2), ref_2]
      - Num Columns: 3
      - Row Type: string, string, string
      - Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))
    [0] TableScan id: 1, num_columns: 10
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string


Optimized:
[4] Project [ref_0, concat(ref_0, ref_1), ref_1]
    - Num Columns: 3
    - Row Type: string, string, string
    - Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))
    - Keys: [key: [ref_0, ref_2], lower_bound: 0, upper_bound: 1]
  [6] Aggregate key: [ref_0, ref_1], aggregates: []
      - Num Columns: 2
      - Row Type: string, string
      - Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]
    [7] Project [ref_0, ref_2]
        - Num Columns: 2
        - Row Type: string, string
      [0] TableScan id: 1, num_columns: 10
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string

initial {"nodes":[{"id":"2","label":"[2] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Project [ref_0, concat(ref_0, ref_2), ref_2]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"}]}
step AggregateSimplifierRule {"nodes":[{"id":"2","label":"[2] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Project [ref_0, concat(ref_0, ref_2), ref_2]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"4","label":"[4] Project [ref_0, concat(ref_0, ref_1), ref_1]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))","Keys: [key: [ref_0, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"3","label":"[3] Aggregate key: [ref_0, ref_2], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"1","label":"input 0"},{"from":"2","to":"4","label":"AggregateSimplifierRule"}]}
step PruneAggregateInputRule {"nodes":[{"id":"4","label":"[4] Project [ref_0, concat(ref_0, ref_1), ref_1]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))","Keys: [key: [ref_0, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"3","label":"[3] Aggregate key: [ref_0, ref_2], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Project [ref_0, concat(ref_0, ref_2), ref_2]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"6","label":"[6] Aggregate key: [ref_0, ref_1], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"5","label":"[5] Project [ref_0, ref_2]","annotations":["Num Columns: 2","Row Type: string, string"]}],"edges":[{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"6","to":"5","label":"input 0"},{"from":"5","to":"1","label":"input 0"},{"from":"3","to":"6","label":"PruneAggregateInputRule"}]}
step ProjectMergeRule {"nodes":[{"id":"4","label":"[4] Project [ref_0, concat(ref_0, ref_1), ref_1]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))","Keys: [key: [ref_0, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"6","label":"[6] Aggregate key: [ref_0, ref_1], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"5","label":"[5] Project [ref_0, ref_2]","annotations":["Num Columns: 2","Row Type: string, string"]},{"id":"1","label":"[1] Project [ref_0, concat(ref_0, ref_2), ref_2]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"7","label":"[7] Project [ref_0, ref_2]","annotations":["Num Columns: 2","Row Type: string, string"]}],"edges":[{"from":"4","to":"6","label":"input 0"},{"from":"6","to":"5","label":"input 0"},{"from":"5","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"7","to":"0","label":"input 0"},{"from":"5","to":"7","label":"ProjectMergeRule"}]}
final {"nodes":[{"id":"4","label":"[4] Project [ref_0, concat(ref_0, ref_1), ref_1]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))","Keys: [key: [ref_0, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"6","label":"[6] Aggregate key: [ref_0, ref_1], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"7","label":"[7] Project [ref_0, ref_2]","annotations":["Num Columns: 2","Row Type: string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"4","to":"6","label":"input 0"},{"from":"6","to":"7","label":"input 0"},{"from":"7","to":"0","label":"input 0"}]}
----
----

run
redundant_key_2
----
----
[2] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []
    - Num Columns: 3
    - Row Type: string, string, string
    - Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))
    - Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]
  [1] Project [ref_0, concat(ref_0, ref_2), ref_2, concat(ref_0, ref_2)]
      - Num Columns: 4
      - Row Type: string, string, string, string
      - Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1), raw_eq(ref_3, concat(ref_0, ref_2))
    [0] TableScan id: 1, num_columns: 10
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string


Optimized:
[4] Project [ref_0, concat(ref_0, ref_1), ref_1]
    - Num Columns: 3
    - Row Type: string, string, string
    - Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))
    - Keys: [key: [ref_0, ref_2], lower_bound: 0, upper_bound: 1]
  [6] Aggregate key: [ref_0, ref_1], aggregates: []
      - Num Columns: 2
      - Row Type: string, string
      - Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]
    [7] Project [ref_0, ref_2]
        - Num Columns: 2
        - Row Type: string, string
      [0] TableScan id: 1, num_columns: 10
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string

initial {"nodes":[{"id":"2","label":"[2] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Project [ref_0, concat(ref_0, ref_2), ref_2, concat(ref_0, ref_2)]","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1), raw_eq(ref_3, concat(ref_0, ref_2))"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"}]}
step AggregateSimplifierRule {"nodes":[{"id":"2","label":"[2] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Project [ref_0, concat(ref_0, ref_2), ref_2, concat(ref_0, ref_2)]","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1), raw_eq(ref_3, concat(ref_0, ref_2))"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"4","label":"[4] Project [ref_0, concat(ref_0, ref_1), ref_1]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))","Keys: [key: [ref_0, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"3","label":"[3] Aggregate key: [ref_0, ref_2], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"1","label":"input 0"},{"from":"2","to":"4","label":"AggregateSimplifierRule"}]}
step PruneAggregateInputRule {"nodes":[{"id":"4","label":"[4] Project [ref_0, concat(ref_0, ref_1), ref_1]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))","Keys: [key: [ref_0, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"3","label":"[3] Aggregate key: [ref_0, ref_2], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Project [ref_0, concat(ref_0, ref_2), ref_2, concat(ref_0, ref_2)]","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1), raw_eq(ref_3, concat(ref_0, ref_2))"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"6","label":"[6] Aggregate key: [ref_0, ref_1], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"5","label":"[5] Project [ref_0, ref_2]","annotations":["Num Columns: 2","Row Type: string, string"]}],"edges":[{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"6","to":"5","label":"input 0"},{"from":"5","to":"1","label":"input 0"},{"from":"3","to":"6","label":"PruneAggregateInputRule"}]}
step ProjectMergeRule {"nodes":[{"id":"4","label":"[4] Project [ref_0, concat(ref_0, ref_1), ref_1]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))","Keys: [key: [ref_0, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"6","label":"[6] Aggregate key: [ref_0, ref_1], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"5","label":"[5] Project [ref_0, ref_2]","annotations":["Num Columns: 2","Row Type: string, string"]},{"id":"1","label":"[1] Project [ref_0, concat(ref_0, ref_2), ref_2, concat(ref_0, ref_2)]","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1), raw_eq(ref_3, concat(ref_0, ref_2))"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"7","label":"[7] Project [ref_0, ref_2]","annotations":["Num Columns: 2","Row Type: string, string"]}],"edges":[{"from":"4","to":"6","label":"input 0"},{"from":"6","to":"5","label":"input 0"},{"from":"5","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"7","to":"0","label":"input 0"},{"from":"5","to":"7","label":"ProjectMergeRule"}]}
final {"nodes":[{"id":"4","label":"[4] Project [ref_0, concat(ref_0, ref_1), ref_1]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_1, concat(ref_0, ref_2))","Keys: [key: [ref_0, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"6","label":"[6] Aggregate key: [ref_0, ref_1], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"7","label":"[7] Project [ref_0, ref_2]","annotations":["Num Columns: 2","Row Type: string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"4","to":"6","label":"input 0"},{"from":"6","to":"7","label":"input 0"},{"from":"7","to":"0","label":"input 0"}]}
----
----

run
redundant_key_3
----
----
[2] Aggregate key: [ref_0, ref_1, ref_2, ref_3], aggregates: []
    - Num Columns: 4
    - Row Type: string, string, string, string
    - Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1), raw_eq(ref_3, concat(ref_0, ref_2))
    - Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1], [key: [ref_0, ref_1, ref_2, ref_3], lower_bound: 0, upper_bound: 1]
  [1] Project [ref_0, concat(ref_0, ref_2), ref_2, concat(ref_0, ref_2)]
      - Num Columns: 4
      - Row Type: string, string, string, string
      - Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1), raw_eq(ref_3, concat(ref_0, ref_2))
    [0] TableScan id: 1, num_columns: 10
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string


Optimized:
[10] Project [ref_0, concat(ref_0, ref_1), ref_1, concat(ref_0, ref_1)]
    - Num Columns: 4
    - Row Type: string, string, string, string
    - Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1), raw_eq(ref_3, concat(ref_0, ref_2))
    - Keys: [key: [ref_0, ref_2], lower_bound: 0, upper_bound: 1]
  [8] Aggregate key: [ref_0, ref_1], aggregates: []
      - Num Columns: 2
      - Row Type: string, string
      - Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]
    [9] Project [ref_0, ref_2]
        - Num Columns: 2
        - Row Type: string, string
      [0] TableScan id: 1, num_columns: 10
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string

initial {"nodes":[{"id":"2","label":"[2] Aggregate key: [ref_0, ref_1, ref_2, ref_3], aggregates: []","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1), raw_eq(ref_3, concat(ref_0, ref_2))","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1], [key: [ref_0, ref_1, ref_2, ref_3], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Project [ref_0, concat(ref_0, ref_2), ref_2, concat(ref_0, ref_2)]","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1), raw_eq(ref_3, concat(ref_0, ref_2))"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"}]}
step AggregateSimplifierRule {"nodes":[{"id":"2","label":"[2] Aggregate key: [ref_0, ref_1, ref_2, ref_3], aggregates: []","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1), raw_eq(ref_3, concat(ref_0, ref_2))","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1], [key: [ref_0, ref_1, ref_2, ref_3], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Project [ref_0, concat(ref_0, ref_2), ref_2, concat(ref_0, ref_2)]","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1), raw_eq(ref_3, concat(ref_0, ref_2))"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"4","label":"[4] Project [ref_0, ref_2, ref_1, ref_2]","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1)","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"3","label":"[3] Aggregate key: [ref_0, ref_2, ref_3], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_2, concat(ref_0, ref_1))","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"1","label":"input 0"},{"from":"2","to":"4","label":"AggregateSimplifierRule"}]}
step AggregateSimplifierRule {"nodes":[{"id":"4","label":"[4] Project [ref_0, ref_2, ref_1, ref_2]","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1)","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"3","label":"[3] Aggregate key: [ref_0, ref_2, ref_3], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_2, concat(ref_0, ref_1))","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Project [ref_0, concat(ref_0, ref_2), ref_2, concat(ref_0, ref_2)]","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1), raw_eq(ref_3, concat(ref_0, ref_2))"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"6","label":"[6] Project [ref_0, ref_1, concat(ref_0, ref_1)]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_2, concat(ref_0, ref_1))","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"5","label":"[5] Aggregate key: [ref_0, ref_2], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]}],"edges":[{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"6","to":"5","label":"input 0"},{"from":"5","to":"1","label":"input 0"},{"from":"3","to":"6","label":"AggregateSimplifierRule"}]}
step PruneAggregateInputRule {"nodes":[{"id":"4","label":"[4] Project [ref_0, ref_2, ref_1, ref_2]","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1)","Keys: [key: [ref_0, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"6","label":"[6] Project [ref_0, ref_1, concat(ref_0, ref_1)]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_2, concat(ref_0, ref_1))","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"5","label":"[5] Aggregate key: [ref_0, ref_2], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Project [ref_0, concat(ref_0, ref_2), ref_2, concat(ref_0, ref_2)]","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1), raw_eq(ref_3, concat(ref_0, ref_2))"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"8","label":"[8] Aggregate key: [ref_0, ref_1], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"7","label":"[7] Project [ref_0, ref_2]","annotations":["Num Columns: 2","Row Type: string, string"]}],"edges":[{"from":"4","to":"6","label":"input 0"},{"from":"6","to":"5","label":"input 0"},{"from":"5","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"8","to":"7","label":"input 0"},{"from":"7","to":"1","label":"input 0"},{"from":"5","to":"8","label":"PruneAggregateInputRule"}]}
step ProjectMergeRule {"nodes":[{"id":"4","label":"[4] Project [ref_0, ref_2, ref_1, ref_2]","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1)","Keys: [key: [ref_0, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"6","label":"[6] Project [ref_0, ref_1, concat(ref_0, ref_1)]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_2, concat(ref_0, ref_1))","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"8","label":"[8] Aggregate key: [ref_0, ref_1], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"7","label":"[7] Project [ref_0, ref_2]","annotations":["Num Columns: 2","Row Type: string, string"]},{"id":"1","label":"[1] Project [ref_0, concat(ref_0, ref_2), ref_2, concat(ref_0, ref_2)]","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1), raw_eq(ref_3, concat(ref_0, ref_2))"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"9","label":"[9] Project [ref_0, ref_2]","annotations":["Num Columns: 2","Row Type: string, string"]}],"edges":[{"from":"4","to":"6","label":"input 0"},{"from":"6","to":"8","label":"input 0"},{"from":"8","to":"7","label":"input 0"},{"from":"7","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"9","to":"0","label":"input 0"},{"from":"7","to":"9","label":"ProjectMergeRule"}]}
step ProjectMergeRule {"nodes":[{"id":"4","label":"[4] Project [ref_0, ref_2, ref_1, ref_2]","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1)","Keys: [key: [ref_0, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"6","label":"[6] Project [ref_0, ref_1, concat(ref_0, ref_1)]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_2, concat(ref_0, ref_1))","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"8","label":"[8] Aggregate key: [ref_0, ref_1], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"9","label":"[9] Project [ref_0, ref_2]","annotations":["Num Columns: 2","Row Type: string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"10","label":"[10] Project [ref_0, concat(ref_0, ref_1), ref_1, concat(ref_0, ref_1)]","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1), raw_eq(ref_3, concat(ref_0, ref_2))","Keys: [key: [ref_0, ref_2], lower_bound: 0, upper_bound: 1]"]}],"edges":[{"from":"4","to":"6","label":"input 0"},{"from":"6","to":"8","label":"input 0"},{"from":"8","to":"9","label":"input 0"},{"from":"9","to":"0","label":"input 0"},{"from":"10","to":"8","label":"input 0"},{"from":"4","to":"10","label":"ProjectMergeRule"}]}
final {"nodes":[{"id":"10","label":"[10] Project [ref_0, concat(ref_0, ref_1), ref_1, concat(ref_0, ref_1)]","annotations":["Num Columns: 4","Row Type: string, string, string, string","Pulled Up Predicates: raw_eq(ref_1, ref_3), raw_eq(ref_1, concat(ref_0, ref_2)), raw_eq(ref_3, ref_1), raw_eq(ref_3, concat(ref_0, ref_2))","Keys: [key: [ref_0, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"8","label":"[8] Aggregate key: [ref_0, ref_1], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Keys: [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"9","label":"[9] Project [ref_0, ref_2]","annotations":["Num Columns: 2","Row Type: string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"10","to":"8","label":"input 0"},{"from":"8","to":"9","label":"input 0"},{"from":"9","to":"0","label":"input 0"}]}
----
----

run
constant_key
----
----
[2] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []
    - Num Columns: 3
    - Row Type: string, string, string
    - Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')
    - Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]
  [1] Project ['hello', 'world', 'bla']
      - Num Columns: 3
      - Row Type: string, string, string
      - Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')
    [0] TableScan id: 1, num_columns: 10
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string


Optimized:
[12] Project ['hello', 'world', 'bla']
    - Num Columns: 3
    - Row Type: string, string, string
    - Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')
    - Keys: [key: [], lower_bound: 0, upper_bound: 1]
  [10] Aggregate key: [ref_0], aggregates: []
      - Num Columns: 1
      - Row Type: string
      - Pulled Up Predicates: raw_eq(ref_0, 'bla')
      - Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_0], lower_bound: 0, upper_bound: 1]
    [11] Project ['bla']
        - Num Columns: 1
        - Row Type: string
        - Pulled Up Predicates: raw_eq(ref_0, 'bla')
      [0] TableScan id: 1, num_columns: 10
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string

initial {"nodes":[{"id":"2","label":"[2] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Project ['hello', 'world', 'bla']","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"}]}
step AggregateSimplifierRule {"nodes":[{"id":"2","label":"[2] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Project ['hello', 'world', 'bla']","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"4","label":"[4] Project ['hello', ref_0, ref_1]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"3","label":"[3] Aggregate key: [ref_1, ref_2], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: raw_eq(ref_0, 'world'), raw_eq(ref_1, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"1","label":"input 0"},{"from":"2","to":"4","label":"AggregateSimplifierRule"}]}
step ProjectNormalizationRule {"nodes":[{"id":"4","label":"[4] Project ['hello', ref_0, ref_1]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"3","label":"[3] Aggregate key: [ref_1, ref_2], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: raw_eq(ref_0, 'world'), raw_eq(ref_1, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Project ['hello', 'world', 'bla']","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"5","label":"[5] Project ['hello', 'world', 'bla']","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1]"]}],"edges":[{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"5","to":"3","label":"input 0"},{"from":"4","to":"5","label":"ProjectNormalizationRule"}]}
step AggregateSimplifierRule {"nodes":[{"id":"5","label":"[5] Project ['hello', 'world', 'bla']","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1]"]},{"id":"3","label":"[3] Aggregate key: [ref_1, ref_2], aggregates: []","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: raw_eq(ref_0, 'world'), raw_eq(ref_1, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_0, ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Project ['hello', 'world', 'bla']","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"7","label":"[7] Project ['world', ref_0]","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: raw_eq(ref_0, 'world'), raw_eq(ref_1, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"6","label":"[6] Aggregate key: [ref_2], aggregates: []","annotations":["Num Columns: 1","Row Type: string","Pulled Up Predicates: raw_eq(ref_0, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_0], lower_bound: 0, upper_bound: 1]"]}],"edges":[{"from":"5","to":"3","label":"input 0"},{"from":"3","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"7","to":"6","label":"input 0"},{"from":"6","to":"1","label":"input 0"},{"from":"3","to":"7","label":"AggregateSimplifierRule"}]}
step ProjectNormalizationRule {"nodes":[{"id":"5","label":"[5] Project ['hello', 'world', 'bla']","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1]"]},{"id":"7","label":"[7] Project ['world', ref_0]","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: raw_eq(ref_0, 'world'), raw_eq(ref_1, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_1], lower_bound: 0, upper_bound: 1]"]},{"id":"6","label":"[6] Aggregate key: [ref_2], aggregates: []","annotations":["Num Columns: 1","Row Type: string","Pulled Up Predicates: raw_eq(ref_0, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_0], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Project ['hello', 'world', 'bla']","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"8","label":"[8] Project ['world', 'bla']","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: raw_eq(ref_0, 'world'), raw_eq(ref_1, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1]"]}],"edges":[{"from":"5","to":"7","label":"input 0"},{"from":"7","to":"6","label":"input 0"},{"from":"6","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"8","to":"6","label":"input 0"},{"from":"7","to":"8","label":"ProjectNormalizationRule"}]}
step PruneAggregateInputRule {"nodes":[{"id":"5","label":"[5] Project ['hello', 'world', 'bla']","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1]"]},{"id":"8","label":"[8] Project ['world', 'bla']","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: raw_eq(ref_0, 'world'), raw_eq(ref_1, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1]"]},{"id":"6","label":"[6] Aggregate key: [ref_2], aggregates: []","annotations":["Num Columns: 1","Row Type: string","Pulled Up Predicates: raw_eq(ref_0, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_0], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Project ['hello', 'world', 'bla']","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"10","label":"[10] Aggregate key: [ref_0], aggregates: []","annotations":["Num Columns: 1","Row Type: string","Pulled Up Predicates: raw_eq(ref_0, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_0], lower_bound: 0, upper_bound: 1]"]},{"id":"9","label":"[9] Project [ref_2]","annotations":["Num Columns: 1","Row Type: string","Pulled Up Predicates: raw_eq(ref_0, 'bla')"]}],"edges":[{"from":"5","to":"8","label":"input 0"},{"from":"8","to":"6","label":"input 0"},{"from":"6","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"10","to":"9","label":"input 0"},{"from":"9","to":"1","label":"input 0"},{"from":"6","to":"10","label":"PruneAggregateInputRule"}]}
step ProjectMergeRule {"nodes":[{"id":"5","label":"[5] Project ['hello', 'world', 'bla']","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1]"]},{"id":"8","label":"[8] Project ['world', 'bla']","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: raw_eq(ref_0, 'world'), raw_eq(ref_1, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1]"]},{"id":"10","label":"[10] Aggregate key: [ref_0], aggregates: []","annotations":["Num Columns: 1","Row Type: string","Pulled Up Predicates: raw_eq(ref_0, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_0], lower_bound: 0, upper_bound: 1]"]},{"id":"9","label":"[9] Project [ref_2]","annotations":["Num Columns: 1","Row Type: string","Pulled Up Predicates: raw_eq(ref_0, 'bla')"]},{"id":"1","label":"[1] Project ['hello', 'world', 'bla']","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"11","label":"[11] Project ['bla']","annotations":["Num Columns: 1","Row Type: string","Pulled Up Predicates: raw_eq(ref_0, 'bla')"]}],"edges":[{"from":"5","to":"8","label":"input 0"},{"from":"8","to":"10","label":"input 0"},{"from":"10","to":"9","label":"input 0"},{"from":"9","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"11","to":"0","label":"input 0"},{"from":"9","to":"11","label":"ProjectMergeRule"}]}
step ProjectMergeRule {"nodes":[{"id":"5","label":"[5] Project ['hello', 'world', 'bla']","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1]"]},{"id":"8","label":"[8] Project ['world', 'bla']","annotations":["Num Columns: 2","Row Type: string, string","Pulled Up Predicates: raw_eq(ref_0, 'world'), raw_eq(ref_1, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1]"]},{"id":"10","label":"[10] Aggregate key: [ref_0], aggregates: []","annotations":["Num Columns: 1","Row Type: string","Pulled Up Predicates: raw_eq(ref_0, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_0], lower_bound: 0, upper_bound: 1]"]},{"id":"11","label":"[11] Project ['bla']","annotations":["Num Columns: 1","Row Type: string","Pulled Up Predicates: raw_eq(ref_0, 'bla')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"12","label":"[12] Project ['hello', 'world', 'bla']","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1]"]}],"edges":[{"from":"5","to":"8","label":"input 0"},{"from":"8","to":"10","label":"input 0"},{"from":"10","to":"11","label":"input 0"},{"from":"11","to":"0","label":"input 0"},{"from":"12","to":"10","label":"input 0"},{"from":"5","to":"12","label":"ProjectMergeRule"}]}
final {"nodes":[{"id":"12","label":"[12] Project ['hello', 'world', 'bla']","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: raw_eq(ref_0, 'hello'), raw_eq(ref_1, 'world'), raw_eq(ref_2, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1]"]},{"id":"10","label":"[10] Aggregate key: [ref_0], aggregates: []","annotations":["Num Columns: 1","Row Type: string","Pulled Up Predicates: raw_eq(ref_0, 'bla')","Keys: [key: [], lower_bound: 0, upper_bound: 1], [key: [ref_0], lower_bound: 0, upper_bound: 1]"]},{"id":"11","label":"[11] Project ['bla']","annotations":["Num Columns: 1","Row Type: string","Pulled Up Predicates: raw_eq(ref_0, 'bla')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"12","to":"10","label":"input 0"},{"from":"10","to":"11","label":"input 0"},{"from":"11","to":"0","label":"input 0"}]}
----
----

run
redundant_aggregate
----
----
[2] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []
    - Num Columns: 3
    - Row Type: string, string, string
    - Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]
  [1] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []
      - Num Columns: 3
      - Row Type: string, string, string
      - Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]
    [0] TableScan id: 1, num_columns: 10
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string


Optimized:
[3] Project [ref_0, ref_1, ref_2]
    - Num Columns: 3
    - Row Type: string, string, string
    - Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]
  [5] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []
      - Num Columns: 3
      - Row Type: string, string, string
      - Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]
    [4] Project [ref_0, ref_1, ref_2]
        - Num Columns: 3
        - Row Type: string, string, string
      [0] TableScan id: 1, num_columns: 10
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string

initial {"nodes":[{"id":"2","label":"[2] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"}]}
step AggregateRemoveRule {"nodes":[{"id":"2","label":"[2] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2]","annotations":["Num Columns: 3","Row Type: string, string, string","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]}],"edges":[{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"3","to":"1","label":"input 0"},{"from":"2","to":"3","label":"AggregateRemoveRule"}]}
step PruneAggregateInputRule {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2]","annotations":["Num Columns: 3","Row Type: string, string, string","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"1","label":"[1] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"5","label":"[5] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"4","label":"[4] Project [ref_0, ref_1, ref_2]","annotations":["Num Columns: 3","Row Type: string, string, string"]}],"edges":[{"from":"3","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"5","to":"4","label":"input 0"},{"from":"4","to":"0","label":"input 0"},{"from":"1","to":"5","label":"PruneAggregateInputRule"}]}
final {"nodes":[{"id":"3","label":"[3] Project [ref_0, ref_1, ref_2]","annotations":["Num Columns: 3","Row Type: string, string, string","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"5","label":"[5] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"4","label":"[4] Project [ref_0, ref_1, ref_2]","annotations":["Num Columns: 3","Row Type: string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]}],"edges":[{"from":"3","to":"5","label":"input 0"},{"from":"5","to":"4","label":"input 0"},{"from":"4","to":"0","label":"input 0"}]}
----
----

run
recurrent_node
----
----
[3] Union
    - Num Columns: 3
    - Row Type: string, string, string
    - Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 2]
  [1] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []
      - Num Columns: 3
      - Row Type: string, string, string
      - Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]
    [0] TableScan id: 1, num_columns: 10
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
  [2] Filter [eq(ref_0, 'world')]
      - Num Columns: 3
      - Row Type: string, string, string
      - Pulled Up Predicates: eq(ref_0, 'world')
      - Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1], [key: [ref_1, ref_2], lower_bound: 0, upper_bound: 1]
    Recurring node 1


Optimized:
[3] Union
    - Num Columns: 3
    - Row Type: string, string, string
    - Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 2]
  [5] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []
      - Num Columns: 3
      - Row Type: string, string, string
      - Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]
    [4] Project [ref_0, ref_1, ref_2]
        - Num Columns: 3
        - Row Type: string, string, string
      [0] TableScan id: 1, num_columns: 10
          - Num Columns: 10
          - Row Type: string, string, string, string, string, string, string, string, string, string
  [2] Filter [eq(ref_0, 'world')]
      - Num Columns: 3
      - Row Type: string, string, string
      - Pulled Up Predicates: eq(ref_0, 'world')
      - Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1], [key: [ref_1, ref_2], lower_bound: 0, upper_bound: 1]
    Recurring node 5

initial {"nodes":[{"id":"3","label":"[3] Union","annotations":["Num Columns: 3","Row Type: string, string, string","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 2]"]},{"id":"1","label":"[1] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"2","label":"[2] Filter [eq(ref_0, 'world')]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: eq(ref_0, 'world')","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1], [key: [ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]}],"edges":[{"from":"3","to":"1","label":"input 0"},{"from":"3","to":"2","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 0"}]}
step PruneAggregateInputRule {"nodes":[{"id":"3","label":"[3] Union","annotations":["Num Columns: 3","Row Type: string, string, string","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 2]"]},{"id":"1","label":"[1] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"2","label":"[2] Filter [eq(ref_0, 'world')]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: eq(ref_0, 'world')","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1], [key: [ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"5","label":"[5] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"4","label":"[4] Project [ref_0, ref_1, ref_2]","annotations":["Num Columns: 3","Row Type: string, string, string"]}],"edges":[{"from":"3","to":"1","label":"input 0"},{"from":"3","to":"2","label":"input 1"},{"from":"1","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"5","to":"4","label":"input 0"},{"from":"4","to":"0","label":"input 0"},{"from":"1","to":"5","label":"PruneAggregateInputRule"}]}
final {"nodes":[{"id":"3","label":"[3] Union","annotations":["Num Columns: 3","Row Type: string, string, string","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 2]"]},{"id":"5","label":"[5] Aggregate key: [ref_0, ref_1, ref_2], aggregates: []","annotations":["Num Columns: 3","Row Type: string, string, string","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]},{"id":"4","label":"[4] Project [ref_0, ref_1, ref_2]","annotations":["Num Columns: 3","Row Type: string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"2","label":"[2] Filter [eq(ref_0, 'world')]","annotations":["Num Columns: 3","Row Type: string, string, string","Pulled Up Predicates: eq(ref_0, 'world')","Keys: [key: [ref_0, ref_1, ref_2], lower_bound: 0, upper_bound: 1], [key: [ref_1, ref_2], lower_bound: 0, upper_bound: 1]"]}],"edges":[{"from":"3","to":"5","label":"input 0"},{"from":"3","to":"2","label":"input 1"},{"from":"5","to":"4","label":"input 0"},{"from":"4","to":"0","label":"input 0"},{"from":"2","to":"5","label":"input 0"}]}
----
----

run
identity_join
----
----
[4] Project [ref_0]
    - Num Columns: 1
    - Row Type: string
  [3] Inner Join []
      - Num Columns: 6
      - Row Type: string, string, string, string, string, bool
      - Pulled Up Predicates: raw_eq(ref_5, TRUE)
    [0] TableScan id: 1, num_columns: 5
        - Num Columns: 5
        - Row Type: string, string, string, string, string
    [2] Project [TRUE]
        - Num Columns: 1
        - Row Type: bool
        - Pulled Up Predicates: raw_eq(ref_0, TRUE)
        - Keys: [key: [], lower_bound: 1, upper_bound: 1]
      [1] Aggregate key: [], aggregates: []
          - Num Columns: 0
          - Row Type: 
          - Keys: [key: [], lower_bound: 1, upper_bound: 1]
        Recurring node 0


Optimized:
[5] Project [ref_0]
    - Num Columns: 1
    - Row Type: string
  [0] TableScan id: 1, num_columns: 5
      - Num Columns: 5
      - Row Type: string, string, string, string, string

initial {"nodes":[{"id":"4","label":"[4] Project [ref_0]","annotations":["Num Columns: 1","Row Type: string"]},{"id":"3","label":"[3] Inner Join []","annotations":["Num Columns: 6","Row Type: string, string, string, string, string, bool","Pulled Up Predicates: raw_eq(ref_5, TRUE)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"2","label":"[2] Project [TRUE]","annotations":["Num Columns: 1","Row Type: bool","Pulled Up Predicates: raw_eq(ref_0, TRUE)","Keys: [key: [], lower_bound: 1, upper_bound: 1]"]},{"id":"1","label":"[1] Aggregate key: [], aggregates: []","annotations":["Num Columns: 0","Row Type: ","Keys: [key: [], lower_bound: 1, upper_bound: 1]"]}],"edges":[{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"0","label":"input 0"},{"from":"3","to":"2","label":"input 1"},{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"}]}
step JoinPruningRule {"nodes":[{"id":"4","label":"[4] Project [ref_0]","annotations":["Num Columns: 1","Row Type: string"]},{"id":"3","label":"[3] Inner Join []","annotations":["Num Columns: 6","Row Type: string, string, string, string, string, bool","Pulled Up Predicates: raw_eq(ref_5, TRUE)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"2","label":"[2] Project [TRUE]","annotations":["Num Columns: 1","Row Type: bool","Pulled Up Predicates: raw_eq(ref_0, TRUE)","Keys: [key: [], lower_bound: 1, upper_bound: 1]"]},{"id":"1","label":"[1] Aggregate key: [], aggregates: []","annotations":["Num Columns: 0","Row Type: ","Keys: [key: [], lower_bound: 1, upper_bound: 1]"]},{"id":"9","label":"[9] Project [ref_0]","annotations":["Num Columns: 1","Row Type: string"]},{"id":"8","label":"[8] Project [ref_0]","annotations":["Num Columns: 1","Row Type: string"]},{"id":"7","label":"[7] Inner Join []","annotations":["Num Columns: 1","Row Type: string"]},{"id":"5","label":"[5] Project [ref_0]","annotations":["Num Columns: 1","Row Type: string"]},{"id":"6","label":"[6] Project []","annotations":["Num Columns: 0","Row Type: ","Keys: [key: [], lower_bound: 1, upper_bound: 1]"]}],"edges":[{"from":"4","to":"3","label":"input 0"},{"from":"3","to":"0","label":"input 0"},{"from":"3","to":"2","label":"input 1"},{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"9","to":"8","label":"input 0"},{"from":"8","to":"7","label":"input 0"},{"from":"7","to":"5","label":"input 0"},{"from":"7","to":"6","label":"input 1"},{"from":"5","to":"0","label":"input 0"},{"from":"6","to":"2","label":"input 0"},{"from":"4","to":"9","label":"JoinPruningRule"}]}
step ProjectMergeRule {"nodes":[{"id":"9","label":"[9] Project [ref_0]","annotations":["Num Columns: 1","Row Type: string"]},{"id":"8","label":"[8] Project [ref_0]","annotations":["Num Columns: 1","Row Type: string"]},{"id":"7","label":"[7] Inner Join []","annotations":["Num Columns: 1","Row Type: string"]},{"id":"5","label":"[5] Project [ref_0]","annotations":["Num Columns: 1","Row Type: string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"6","label":"[6] Project []","annotations":["Num Columns: 0","Row Type: ","Keys: [key: [], lower_bound: 1, upper_bound: 1]"]},{"id":"2","label":"[2] Project [TRUE]","annotations":["Num Columns: 1","Row Type: bool","Pulled Up Predicates: raw_eq(ref_0, TRUE)","Keys: [key: [], lower_bound: 1, upper_bound: 1]"]},{"id":"1","label":"[1] Aggregate key: [], aggregates: []","annotations":["Num Columns: 0","Row Type: ","Keys: [key: [], lower_bound: 1, upper_bound: 1]"]}],"edges":[{"from":"9","to":"8","label":"input 0"},{"from":"8","to":"7","label":"input 0"},{"from":"7","to":"5","label":"input 0"},{"from":"7","to":"6","label":"input 1"},{"from":"5","to":"0","label":"input 0"},{"from":"6","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"9","to":"8","label":"ProjectMergeRule"}]}
step IdentityJoinRule {"nodes":[{"id":"8","label":"[8] Project [ref_0]","annotations":["Num Columns: 1","Row Type: string"]},{"id":"7","label":"[7] Inner Join []","annotations":["Num Columns: 1","Row Type: string"]},{"id":"5","label":"[5] Project [ref_0]","annotations":["Num Columns: 1","Row Type: string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"6","label":"[6] Project []","annotations":["Num Columns: 0","Row Type: ","Keys: [key: [], lower_bound: 1, upper_bound: 1]"]},{"id":"2","label":"[2] Project [TRUE]","annotations":["Num Columns: 1","Row Type: bool","Pulled Up Predicates: raw_eq(ref_0, TRUE)","Keys: [key: [], lower_bound: 1, upper_bound: 1]"]},{"id":"1","label":"[1] Aggregate key: [], aggregates: []","annotations":["Num Columns: 0","Row Type: ","Keys: [key: [], lower_bound: 1, upper_bound: 1]"]}],"edges":[{"from":"8","to":"7","label":"input 0"},{"from":"7","to":"5","label":"input 0"},{"from":"7","to":"6","label":"input 1"},{"from":"5","to":"0","label":"input 0"},{"from":"6","to":"2","label":"input 0"},{"from":"2","to":"1","label":"input 0"},{"from":"1","to":"0","label":"input 0"},{"from":"7","to":"5","label":"IdentityJoinRule"}]}
step ProjectMergeRule {"nodes":[{"id":"8","label":"[8] Project [ref_0]","annotations":["Num Columns: 1","Row Type: string"]},{"id":"5","label":"[5] Project [ref_0]","annotations":["Num Columns: 1","Row Type: string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]}],"edges":[{"from":"8","to":"5","label":"input 0"},{"from":"5","to":"0","label":"input 0"},{"from":"8","to":"5","label":"ProjectMergeRule"}]}
final {"nodes":[{"id":"5","label":"[5] Project [ref_0]","annotations":["Num Columns: 1","Row Type: string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]}],"edges":[{"from":"5","to":"0","label":"input 0"}]}
----
----

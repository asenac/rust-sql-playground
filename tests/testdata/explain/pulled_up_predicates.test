
run
union_predicates
----
----
[3] Union
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: eq(ref_0, 'world')
  [1] Filter [eq(ref_0, 'world')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: eq(ref_0, 'world')
    [0] TableScan id: 1, num_columns: 10
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
  [2] Filter [eq(ref_1, 'hello'), eq(ref_0, 'world')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: eq(ref_0, 'world'), eq(ref_1, 'hello')
    Recurring node 0
  Recurring node 1


Optimized:
[3] Union
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: eq(ref_0, 'world')
  [1] Filter [eq(ref_0, 'world')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: eq(ref_0, 'world')
    [0] TableScan id: 1, num_columns: 10
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
  [2] Filter [eq(ref_1, 'hello'), eq(ref_0, 'world')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: eq(ref_0, 'world'), eq(ref_1, 'hello')
    Recurring node 0
  Recurring node 1

initial {"nodes":[{"id":"3","label":"[3] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'world')"]},{"id":"1","label":"[1] Filter [eq(ref_0, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'world')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"2","label":"[2] Filter [eq(ref_1, 'hello'), eq(ref_0, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'world'), eq(ref_1, 'hello')"]}],"edges":[{"from":"3","to":"1","label":"input 0"},{"from":"3","to":"2","label":"input 1"},{"from":"3","to":"1","label":"input 2"},{"from":"1","to":"0","label":"input 0"},{"from":"2","to":"0","label":"input 0"}]}

final {"nodes":[{"id":"3","label":"[3] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'world')"]},{"id":"1","label":"[1] Filter [eq(ref_0, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'world')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 10","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"2","label":"[2] Filter [eq(ref_1, 'hello'), eq(ref_0, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, 'world'), eq(ref_1, 'hello')"]}],"edges":[{"from":"3","to":"1","label":"input 0"},{"from":"3","to":"2","label":"input 1"},{"from":"3","to":"1","label":"input 2"},{"from":"1","to":"0","label":"input 0"},{"from":"2","to":"0","label":"input 0"}]}
----
----

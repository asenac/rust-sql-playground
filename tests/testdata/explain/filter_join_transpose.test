run
filter_join_transpose_inner
----
----
[5] Union
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')
  [4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')
    [2] Inner Join [eq(ref_0, ref_5)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
        - Pulled Up Predicates: eq(ref_0, ref_5)
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
      [1] TableScan id: 2, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
  [3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')
    Recurring node 2


Optimized:
[5] Union
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')
  [8] Inner Join [eq(ref_0, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')
    [6] Filter [eq(ref_2, 'hello')]
        - Num Columns: 5
        - Row Type: string, string, string, string, string
        - Pulled Up Predicates: eq(ref_2, 'hello')
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
    [7] Filter [gt(ref_1, 'world')]
        - Num Columns: 5
        - Row Type: string, string, string, string, string
        - Pulled Up Predicates: gt(ref_1, 'world')
      [1] TableScan id: 2, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
  [9] Filter [lt(ref_1, 'hello')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')
    Recurring node 8

initial {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"2","label":"[2] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"3","to":"2","label":"input 0"}]}
step FilterJoinTransposeRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"2","label":"[2] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"7","label":"[7] Filter [gt(ref_1, 'world')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: gt(ref_1, 'world')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"3","to":"2","label":"input 0"},{"from":"8","to":"6","label":"input 0"},{"from":"8","to":"7","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"7","to":"1","label":"input 0"},{"from":"2","to":"8","label":"FilterJoinTransposeRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"7","label":"[7] Filter [gt(ref_1, 'world')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: gt(ref_1, 'world')"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"8","label":"input 0"},{"from":"8","to":"6","label":"input 0"},{"from":"8","to":"7","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"7","to":"1","label":"input 0"},{"from":"3","to":"8","label":"input 0"},{"from":"4","to":"8","label":"FilterNormalizationRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"7","label":"[7] Filter [gt(ref_1, 'world')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: gt(ref_1, 'world')"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"9","label":"[9] Filter [lt(ref_1, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"8","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"8","to":"6","label":"input 0"},{"from":"8","to":"7","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"7","to":"1","label":"input 0"},{"from":"3","to":"8","label":"input 0"},{"from":"9","to":"8","label":"input 0"},{"from":"3","to":"9","label":"FilterNormalizationRule"}]}
final {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"7","label":"[7] Filter [gt(ref_1, 'world')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: gt(ref_1, 'world')"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"9","label":"[9] Filter [lt(ref_1, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"8","label":"input 0"},{"from":"5","to":"9","label":"input 1"},{"from":"8","to":"6","label":"input 0"},{"from":"8","to":"7","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"7","to":"1","label":"input 0"},{"from":"9","to":"8","label":"input 0"}]}
----
----

run
filter_join_transpose_left
----
----
[5] Union
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')
  [4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')
    [2] Left Outer Join [eq(ref_0, ref_5)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
      [1] TableScan id: 2, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
  [3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello'), lt(ref_1, 'hello')
    Recurring node 2


Optimized:
[5] Union
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')
  [12] Inner Join [eq(ref_0, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')
    [6] Filter [eq(ref_2, 'hello')]
        - Num Columns: 5
        - Row Type: string, string, string, string, string
        - Pulled Up Predicates: eq(ref_2, 'hello')
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
    [11] Filter [gt(ref_1, 'world')]
        - Num Columns: 5
        - Row Type: string, string, string, string, string
        - Pulled Up Predicates: gt(ref_1, 'world')
      [1] TableScan id: 2, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
  [13] Filter [lt(ref_1, 'hello')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')
    Recurring node 12

initial {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')"]},{"id":"2","label":"[2] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"3","to":"2","label":"input 0"}]}
step FilterJoinTransposeRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')"]},{"id":"2","label":"[2] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"7","label":"[7] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"3","to":"2","label":"input 0"},{"from":"7","to":"6","label":"input 0"},{"from":"7","to":"1","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"2","to":"7","label":"FilterJoinTransposeRule"}]}
step OuterToInnerJoinRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')"]},{"id":"7","label":"[7] Left Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), eq(ref_2, 'hello')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"7","label":"input 0"},{"from":"7","to":"6","label":"input 0"},{"from":"7","to":"1","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"3","to":"7","label":"input 0"},{"from":"8","to":"6","label":"input 0"},{"from":"8","to":"1","label":"input 1"},{"from":"7","to":"8","label":"OuterToInnerJoinRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"9","label":"[9] Filter [gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"8","label":"input 0"},{"from":"8","to":"6","label":"input 0"},{"from":"8","to":"1","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"3","to":"8","label":"input 0"},{"from":"9","to":"8","label":"input 0"},{"from":"4","to":"9","label":"FilterNormalizationRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"9","label":"[9] Filter [gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"10","label":"[10] Filter [lt(ref_1, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"9","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"9","to":"8","label":"input 0"},{"from":"8","to":"6","label":"input 0"},{"from":"8","to":"1","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"3","to":"8","label":"input 0"},{"from":"10","to":"8","label":"input 0"},{"from":"3","to":"10","label":"FilterNormalizationRule"}]}
step FilterJoinTransposeRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"9","label":"[9] Filter [gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"10","label":"[10] Filter [lt(ref_1, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"12","label":"[12] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"11","label":"[11] Filter [gt(ref_1, 'world')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: gt(ref_1, 'world')"]}],"edges":[{"from":"5","to":"9","label":"input 0"},{"from":"5","to":"10","label":"input 1"},{"from":"9","to":"8","label":"input 0"},{"from":"8","to":"6","label":"input 0"},{"from":"8","to":"1","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"10","to":"8","label":"input 0"},{"from":"12","to":"6","label":"input 0"},{"from":"12","to":"11","label":"input 1"},{"from":"11","to":"1","label":"input 0"},{"from":"8","to":"12","label":"FilterJoinTransposeRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"9","label":"[9] Filter [gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"12","label":"[12] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"11","label":"[11] Filter [gt(ref_1, 'world')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: gt(ref_1, 'world')"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"10","label":"[10] Filter [lt(ref_1, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"13","label":"[13] Filter [lt(ref_1, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"9","label":"input 0"},{"from":"5","to":"10","label":"input 1"},{"from":"9","to":"12","label":"input 0"},{"from":"12","to":"6","label":"input 0"},{"from":"12","to":"11","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"11","to":"1","label":"input 0"},{"from":"10","to":"12","label":"input 0"},{"from":"13","to":"12","label":"input 0"},{"from":"10","to":"13","label":"FilterNormalizationRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"9","label":"[9] Filter [gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"12","label":"[12] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"11","label":"[11] Filter [gt(ref_1, 'world')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: gt(ref_1, 'world')"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"13","label":"[13] Filter [lt(ref_1, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"9","label":"input 0"},{"from":"5","to":"13","label":"input 1"},{"from":"9","to":"12","label":"input 0"},{"from":"12","to":"6","label":"input 0"},{"from":"12","to":"11","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"11","to":"1","label":"input 0"},{"from":"13","to":"12","label":"input 0"},{"from":"9","to":"12","label":"FilterNormalizationRule"}]}
final {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"12","label":"[12] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"11","label":"[11] Filter [gt(ref_1, 'world')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: gt(ref_1, 'world')"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"13","label":"[13] Filter [lt(ref_1, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"12","label":"input 0"},{"from":"5","to":"13","label":"input 1"},{"from":"12","to":"6","label":"input 0"},{"from":"12","to":"11","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"11","to":"1","label":"input 0"},{"from":"13","to":"12","label":"input 0"}]}
----
----

run
filter_join_transpose_right
----
----
[5] Union
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')
  [4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')
    [2] Right Outer Join [eq(ref_0, ref_5)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
      [1] TableScan id: 2, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
  [3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello'), lt(ref_1, 'hello')
    Recurring node 2


Optimized:
[5] Union
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')
  [12] Inner Join [eq(ref_0, ref_5)]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')
    [11] Filter [eq(ref_2, 'hello')]
        - Num Columns: 5
        - Row Type: string, string, string, string, string
        - Pulled Up Predicates: eq(ref_2, 'hello')
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
    [6] Filter [gt(ref_1, 'world')]
        - Num Columns: 5
        - Row Type: string, string, string, string, string
        - Pulled Up Predicates: gt(ref_1, 'world')
      [1] TableScan id: 2, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
  [13] Filter [lt(ref_1, 'hello')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')
    Recurring node 12

initial {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')"]},{"id":"2","label":"[2] Right Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"3","to":"2","label":"input 0"}]}
step FilterJoinTransposeRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')"]},{"id":"2","label":"[2] Right Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"7","label":"[7] Right Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world')"]},{"id":"6","label":"[6] Filter [gt(ref_1, 'world')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: gt(ref_1, 'world')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"3","to":"2","label":"input 0"},{"from":"7","to":"0","label":"input 0"},{"from":"7","to":"6","label":"input 1"},{"from":"6","to":"1","label":"input 0"},{"from":"2","to":"7","label":"FilterJoinTransposeRule"}]}
step OuterToInnerJoinRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')"]},{"id":"7","label":"[7] Right Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"6","label":"[6] Filter [gt(ref_1, 'world')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: gt(ref_1, 'world')"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5)"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"7","label":"input 0"},{"from":"7","to":"0","label":"input 0"},{"from":"7","to":"6","label":"input 1"},{"from":"6","to":"1","label":"input 0"},{"from":"3","to":"7","label":"input 0"},{"from":"8","to":"0","label":"input 0"},{"from":"8","to":"6","label":"input 1"},{"from":"7","to":"8","label":"OuterToInnerJoinRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"6","label":"[6] Filter [gt(ref_1, 'world')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: gt(ref_1, 'world')"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"9","label":"[9] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"8","label":"input 0"},{"from":"8","to":"0","label":"input 0"},{"from":"8","to":"6","label":"input 1"},{"from":"6","to":"1","label":"input 0"},{"from":"3","to":"8","label":"input 0"},{"from":"9","to":"8","label":"input 0"},{"from":"4","to":"9","label":"FilterNormalizationRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"9","label":"[9] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"6","label":"[6] Filter [gt(ref_1, 'world')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: gt(ref_1, 'world')"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"10","label":"[10] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"9","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"9","to":"8","label":"input 0"},{"from":"8","to":"0","label":"input 0"},{"from":"8","to":"6","label":"input 1"},{"from":"6","to":"1","label":"input 0"},{"from":"3","to":"8","label":"input 0"},{"from":"10","to":"8","label":"input 0"},{"from":"3","to":"10","label":"FilterNormalizationRule"}]}
step FilterJoinTransposeRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"9","label":"[9] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"8","label":"[8] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5)"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"6","label":"[6] Filter [gt(ref_1, 'world')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: gt(ref_1, 'world')"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"10","label":"[10] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"12","label":"[12] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"11","label":"[11] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]}],"edges":[{"from":"5","to":"9","label":"input 0"},{"from":"5","to":"10","label":"input 1"},{"from":"9","to":"8","label":"input 0"},{"from":"8","to":"0","label":"input 0"},{"from":"8","to":"6","label":"input 1"},{"from":"6","to":"1","label":"input 0"},{"from":"10","to":"8","label":"input 0"},{"from":"12","to":"11","label":"input 0"},{"from":"12","to":"6","label":"input 1"},{"from":"11","to":"0","label":"input 0"},{"from":"8","to":"12","label":"FilterJoinTransposeRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"9","label":"[9] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"12","label":"[12] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"11","label":"[11] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"6","label":"[6] Filter [gt(ref_1, 'world')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: gt(ref_1, 'world')"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"10","label":"[10] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"13","label":"[13] Filter [lt(ref_1, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"9","label":"input 0"},{"from":"5","to":"10","label":"input 1"},{"from":"9","to":"12","label":"input 0"},{"from":"12","to":"11","label":"input 0"},{"from":"12","to":"6","label":"input 1"},{"from":"11","to":"0","label":"input 0"},{"from":"6","to":"1","label":"input 0"},{"from":"10","to":"12","label":"input 0"},{"from":"13","to":"12","label":"input 0"},{"from":"10","to":"13","label":"FilterNormalizationRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"9","label":"[9] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"12","label":"[12] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"11","label":"[11] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"6","label":"[6] Filter [gt(ref_1, 'world')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: gt(ref_1, 'world')"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"13","label":"[13] Filter [lt(ref_1, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"9","label":"input 0"},{"from":"5","to":"13","label":"input 1"},{"from":"9","to":"12","label":"input 0"},{"from":"12","to":"11","label":"input 0"},{"from":"12","to":"6","label":"input 1"},{"from":"11","to":"0","label":"input 0"},{"from":"6","to":"1","label":"input 0"},{"from":"13","to":"12","label":"input 0"},{"from":"9","to":"12","label":"FilterNormalizationRule"}]}
final {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"12","label":"[12] Inner Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello')"]},{"id":"11","label":"[11] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"6","label":"[6] Filter [gt(ref_1, 'world')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: gt(ref_1, 'world')"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"13","label":"[13] Filter [lt(ref_1, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_0, ref_5), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"12","label":"input 0"},{"from":"5","to":"13","label":"input 1"},{"from":"12","to":"11","label":"input 0"},{"from":"12","to":"6","label":"input 1"},{"from":"11","to":"0","label":"input 0"},{"from":"6","to":"1","label":"input 0"},{"from":"13","to":"12","label":"input 0"}]}
----
----

run
filter_join_transpose_full
----
----
[5] Union
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')
  [4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')
    [2] Full Outer Join [eq(ref_0, ref_5)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
      [1] TableScan id: 2, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
  [3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello'), lt(ref_1, 'hello')
    Recurring node 2


Optimized:
[5] Union
    - Num Columns: 10
    - Row Type: string, string, string, string, string, string, string, string, string, string
    - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')
  [4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')
    [2] Full Outer Join [eq(ref_0, ref_5)]
        - Num Columns: 10
        - Row Type: string, string, string, string, string, string, string, string, string, string
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
      [1] TableScan id: 2, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
  [3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]
      - Num Columns: 10
      - Row Type: string, string, string, string, string, string, string, string, string, string
      - Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello'), lt(ref_1, 'hello')
    Recurring node 2

initial {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')"]},{"id":"2","label":"[2] Full Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"3","to":"2","label":"input 0"}]}

final {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [gt(ref_6, 'world'), eq(ref_2, 'hello')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello')"]},{"id":"2","label":"[2] Full Outer Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello'), gt(ref_6, 'world')]","annotations":["Num Columns: 10","Row Type: string, string, string, string, string, string, string, string, string, string","Pulled Up Predicates: gt(ref_6, 'world'), eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"3","to":"2","label":"input 0"}]}
----
----

run
filter_join_transpose_semi
----
----
[5] Union
    - Num Columns: 5
    - Row Type: string, string, string, string, string
    - Pulled Up Predicates: eq(ref_2, 'hello')
  [4] Filter [eq(ref_2, 'hello')]
      - Num Columns: 5
      - Row Type: string, string, string, string, string
      - Pulled Up Predicates: eq(ref_2, 'hello')
    [2] Semi Join [eq(ref_0, ref_5)]
        - Num Columns: 5
        - Row Type: string, string, string, string, string
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
      [1] TableScan id: 2, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
  [3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello')]
      - Num Columns: 5
      - Row Type: string, string, string, string, string
      - Pulled Up Predicates: eq(ref_2, 'hello'), lt(ref_1, 'hello')
    Recurring node 2


Optimized:
[5] Union
    - Num Columns: 5
    - Row Type: string, string, string, string, string
    - Pulled Up Predicates: eq(ref_2, 'hello')
  [7] Semi Join [eq(ref_0, ref_5)]
      - Num Columns: 5
      - Row Type: string, string, string, string, string
      - Pulled Up Predicates: eq(ref_2, 'hello')
    [6] Filter [eq(ref_2, 'hello')]
        - Num Columns: 5
        - Row Type: string, string, string, string, string
        - Pulled Up Predicates: eq(ref_2, 'hello')
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
    [1] TableScan id: 2, num_columns: 5
        - Num Columns: 5
        - Row Type: string, string, string, string, string
  [8] Filter [lt(ref_1, 'hello')]
      - Num Columns: 5
      - Row Type: string, string, string, string, string
      - Pulled Up Predicates: eq(ref_2, 'hello'), lt(ref_1, 'hello')
    Recurring node 7

initial {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"2","label":"[2] Semi Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"3","to":"2","label":"input 0"}]}
step FilterJoinTransposeRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"2","label":"[2] Semi Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"7","label":"[7] Semi Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"3","to":"2","label":"input 0"},{"from":"7","to":"6","label":"input 0"},{"from":"7","to":"1","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"2","to":"7","label":"FilterJoinTransposeRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"7","label":"[7] Semi Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"7","label":"input 0"},{"from":"7","to":"6","label":"input 0"},{"from":"7","to":"1","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"3","to":"7","label":"input 0"},{"from":"4","to":"7","label":"FilterNormalizationRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"7","label":"[7] Semi Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"8","label":"[8] Filter [lt(ref_1, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"7","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"7","to":"6","label":"input 0"},{"from":"7","to":"1","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"3","to":"7","label":"input 0"},{"from":"8","to":"7","label":"input 0"},{"from":"3","to":"8","label":"FilterNormalizationRule"}]}
final {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"7","label":"[7] Semi Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"8","label":"[8] Filter [lt(ref_1, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"7","label":"input 0"},{"from":"5","to":"8","label":"input 1"},{"from":"7","to":"6","label":"input 0"},{"from":"7","to":"1","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"8","to":"7","label":"input 0"}]}
----
----

run
filter_join_transpose_anti
----
----
[5] Union
    - Num Columns: 5
    - Row Type: string, string, string, string, string
    - Pulled Up Predicates: eq(ref_2, 'hello')
  [4] Filter [eq(ref_2, 'hello')]
      - Num Columns: 5
      - Row Type: string, string, string, string, string
      - Pulled Up Predicates: eq(ref_2, 'hello')
    [2] Anti Join [eq(ref_0, ref_5)]
        - Num Columns: 5
        - Row Type: string, string, string, string, string
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
      [1] TableScan id: 2, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
  [3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello')]
      - Num Columns: 5
      - Row Type: string, string, string, string, string
      - Pulled Up Predicates: eq(ref_2, 'hello'), lt(ref_1, 'hello')
    Recurring node 2


Optimized:
[5] Union
    - Num Columns: 5
    - Row Type: string, string, string, string, string
    - Pulled Up Predicates: eq(ref_2, 'hello')
  [7] Anti Join [eq(ref_0, ref_5)]
      - Num Columns: 5
      - Row Type: string, string, string, string, string
      - Pulled Up Predicates: eq(ref_2, 'hello')
    [6] Filter [eq(ref_2, 'hello')]
        - Num Columns: 5
        - Row Type: string, string, string, string, string
        - Pulled Up Predicates: eq(ref_2, 'hello')
      [0] TableScan id: 1, num_columns: 5
          - Num Columns: 5
          - Row Type: string, string, string, string, string
    [1] TableScan id: 2, num_columns: 5
        - Num Columns: 5
        - Row Type: string, string, string, string, string
  [8] Filter [lt(ref_1, 'hello')]
      - Num Columns: 5
      - Row Type: string, string, string, string, string
      - Pulled Up Predicates: eq(ref_2, 'hello'), lt(ref_1, 'hello')
    Recurring node 7

initial {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"2","label":"[2] Anti Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"3","to":"2","label":"input 0"}]}
step FilterJoinTransposeRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"2","label":"[2] Anti Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"7","label":"[7] Anti Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"2","label":"input 0"},{"from":"2","to":"0","label":"input 0"},{"from":"2","to":"1","label":"input 1"},{"from":"3","to":"2","label":"input 0"},{"from":"7","to":"6","label":"input 0"},{"from":"7","to":"1","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"2","to":"7","label":"FilterJoinTransposeRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"4","label":"[4] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"7","label":"[7] Anti Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"4","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"4","to":"7","label":"input 0"},{"from":"7","to":"6","label":"input 0"},{"from":"7","to":"1","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"3","to":"7","label":"input 0"},{"from":"4","to":"7","label":"FilterNormalizationRule"}]}
step FilterNormalizationRule {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"7","label":"[7] Anti Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"3","label":"[3] Filter [lt(ref_1, 'hello'), eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello'), lt(ref_1, 'hello')"]},{"id":"8","label":"[8] Filter [lt(ref_1, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"7","label":"input 0"},{"from":"5","to":"3","label":"input 1"},{"from":"7","to":"6","label":"input 0"},{"from":"7","to":"1","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"3","to":"7","label":"input 0"},{"from":"8","to":"7","label":"input 0"},{"from":"3","to":"8","label":"FilterNormalizationRule"}]}
final {"nodes":[{"id":"5","label":"[5] Union","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"7","label":"[7] Anti Join [eq(ref_0, ref_5)]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"6","label":"[6] Filter [eq(ref_2, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello')"]},{"id":"0","label":"[0] TableScan id: 1, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"1","label":"[1] TableScan id: 2, num_columns: 5","annotations":["Num Columns: 5","Row Type: string, string, string, string, string"]},{"id":"8","label":"[8] Filter [lt(ref_1, 'hello')]","annotations":["Num Columns: 5","Row Type: string, string, string, string, string","Pulled Up Predicates: eq(ref_2, 'hello'), lt(ref_1, 'hello')"]}],"edges":[{"from":"5","to":"7","label":"input 0"},{"from":"5","to":"8","label":"input 1"},{"from":"7","to":"6","label":"input 0"},{"from":"7","to":"1","label":"input 1"},{"from":"6","to":"0","label":"input 0"},{"from":"8","to":"7","label":"input 0"}]}
----
----
